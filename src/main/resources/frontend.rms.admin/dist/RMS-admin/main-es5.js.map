{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/components/account/my-profile/my-profile.component.html","webpack:///src/app/components/common/home/home.component.html","webpack:///src/app/components/common/login/login.component.html","webpack:///src/app/components/common/navigation/navigation.component.html","webpack:///src/app/components/product/create-product/create-new-category.dialog.html","webpack:///src/app/components/product/create-product/create-product.component.html","webpack:///src/app/components/product/edit-product/edit-product.component.html","webpack:///src/app/components/product/import-products/import-products.component.html","webpack:///src/app/components/product/product-list/product-list.component.html","webpack:///src/app/components/restaurant/create-restaurant/create-restaurant.component.html","webpack:///src/app/components/restaurant/edit-restaurant/edit-restaurant.component.html","webpack:///src/app/components/restaurant/list-restaurants/confirmation-dialog.html","webpack:///src/app/components/restaurant/list-restaurants/list-restaurants.component.html","webpack:///src/app/components/user/create-user/create-user.component.html","webpack:///src/app/components/user/list-users/list-users.component.html","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/account/my-profile/my-profile.component.css","webpack:///src/app/components/account/my-profile/my-profile.component.ts","webpack:///src/app/components/common/home/home.component.css","webpack:///src/app/components/common/home/home.component.ts","webpack:///src/app/components/common/login/login.component.css","webpack:///src/app/components/common/login/login.component.ts","webpack:///src/app/components/common/navigation/navigation.component.css","webpack:///src/app/components/common/navigation/navigation.component.ts","webpack:///src/app/components/product/create-product/create-new-category.dialog.ts","webpack:///src/app/components/product/create-product/create-product.component.css","webpack:///src/app/components/product/create-product/create-product.component.ts","webpack:///src/app/components/product/edit-product/edit-product.component.css","webpack:///src/app/components/product/edit-product/edit-product.component.ts","webpack:///src/app/components/product/import-products/import-products.component.css","webpack:///src/app/components/product/import-products/import-products.component.ts","webpack:///src/app/components/product/product-list/product-list.component.css","webpack:///src/app/components/product/product-list/product-list.component.ts","webpack:///src/app/components/restaurant/create-restaurant/create-restaurant.component.css","webpack:///src/app/components/restaurant/create-restaurant/create-restaurant.component.ts","webpack:///src/app/components/restaurant/edit-restaurant/edit-restaurant.component.css","webpack:///src/app/components/restaurant/edit-restaurant/edit-restaurant.component.ts","webpack:///src/app/components/restaurant/list-restaurants/confirmation-dialog.component.ts","webpack:///src/app/components/restaurant/list-restaurants/list-restaurants.component.css","webpack:///src/app/components/restaurant/list-restaurants/list-restaurants.component.ts","webpack:///src/app/components/user/create-user/create-user.component.css","webpack:///src/app/components/user/create-user/create-user.component.ts","webpack:///src/app/components/user/list-users/list-users.component.css","webpack:///src/app/components/user/list-users/list-users.component.ts","webpack:///src/app/global/app.settings.ts","webpack:///src/app/modules/material/material-module.ts","webpack:///src/app/pipes/product-list-filter.pipe.ts","webpack:///src/app/pipes/user-list-filter.pipe.ts","webpack:///src/app/routing.module.ts","webpack:///src/app/security/auth.guard.ts","webpack:///src/app/security/token.interceptor.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/category.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/restaurant.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","authenticationService","title","sideBarOpened","JSON","parse","window","localStorage","getItem","logout","selector","template","AppModule","declarations","imports","forRoot","providers","provide","useClass","multi","entryComponents","bootstrap","MyProfileComponent","HomeComponent","LoginComponent","formBuilder","toastrService","router","form","group","username","password","login","getRawValue","data","body","authorities","includes","reject","error","message","setSecurityObject","success","navigateByUrl","err","NavigationComponent","role","user","roles","getRepresentationTextForRoles","CreateNewCategoryDialogComponent","categoryService","category","value","addCategory","restaurantId","get","CreateProductComponent","restaurantService","productService","dialog","product","selectedRestaurant","selectedMenu","price","description","allergens","tags","image","fetchRestaurants","quantity","split","menus","selectedMenuId","selectedRestaurantId","formData","FormData","append","addProduct","res","addImageToProduct","redirectAndRequireToLogin","status","getSecurityObject","getAllNames","restaurants","undefined","getById","selectedRestaurantResponse","categories","selectedRestaurantFullObject","event","target","files","length","file","selectedImage","name","setValue","stopPropagation","preventDefault","open","height","width","afterAllClosed","subscribe","result","getAllCategoriesByRestaurantId","addedCategory","EditProductComponent","activeRoute","color","mode","fetchedProduct","fetchProduct","isSelectedNewImage","editProduct","response","restaurant","warning","snapshot","paramMap","productId","setFormData","ImportProductsComponent","toasterService","buildImportProductsForm","loadRestaurants","selectedFile","importFile","importProducts","importProductsResponse","importedProductsCount","clearFormFieldsAndData","console","importProductsForm","required","importFilename","reset","resetForm","ProductListComponent","text","columnsToDisplay","fetchProducts","filterValue","dataSource","filter","trim","toLowerCase","dialogRef","buttonText","ok","cancel","afterClosed","confirmed","a","document","createElement","click","remove","deleteProduct","getAllByRestaurantId","products","content","p","element","column","animations","minHeight","CreateRestaurantComponent","fileData","location","addRestaurant","addImageToRestaurant","setEmptyValuesForFormGroup","formGroup","Object","values","controls","forEach","control","setErrors","EditRestaurantComponent","active","patchUpdateRestaurant","ConfirmationDialogComponent","confirmButtonText","cancelButtonText","close","ListRestaurantsComponent","searchText","page","size","pageIndex","pageSize","paginationObject","requestRestaurants","obj","getAll","allRestaurantResponse","totalElements","deleteRestaurant","CreateUserComponent","userService","addUser","ListUsersComponent","fetchAllUsers","getAllUsers","users","deleteUser","AppSettings","errStatus","representationRoles","push","API_ENDPOINT","MaterialModule","ProductListFilterPipe","items","toLocaleLowerCase","it","UserListFilterPipe","routes","path","component","canActivate","children","RoutingModule","AuthGuard","next","state","authenticated","navigate","providedIn","TokenInterceptor","jwt","clone","setHeaders","Authorization","handle","AuthenticationService","httpClient","post","observe","toPromise","setItem","stringify","removeItem","CategoryService","ProductService","put","RestaurantService","ownerUsername","search","patch","ListResponse","UserService","userId","join","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!-- HEADER -->\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row style=\\\"color: white\\\">\\n      <button mat-icon-button (click)=\\\"toggle()\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <span style=\\\"color: white\\\">QrMenu</span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n<!-- END HEADER -->\\n<mat-drawer-container>\\n  <mat-drawer mode=\\\"side\\\" [opened]=\\\"sideBarOpened\\\">\\n    <app-navigation></app-navigation>\\n  </mat-drawer>\\n\\n  <mat-drawer-content>\\n    <router-outlet></router-outlet>\\n  </mat-drawer-content>\\n</mat-drawer-container>\\n\";","export default \"<p>my-profile works!</p>\\n\";","export default \"<div class=\\\"jumbotron\\\">\\n  <h3>Welcome to FrogZone Admin</h3>\\n  <h4>Current number of restaurants: {{restaurantsCount}}</h4>\\n  <h4>Current number of menus: {{menusCount}}</h4>\\n  <h4>Current number of products: {{productsCount}}</h4>\\n</div>\\n\";","export default \"<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login()\\\">\\n      <h2>Вход</h2>\\n      <img mat-card-sm-image src=\\\"../../assets/images/logo.png\\\" alt=\\\"\\\">\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Потребителско име/Имейл\\\" formControlName=\\\"username\\\" required>\\n        <mat-error>\\n          Моля въведете правилен Имейл адрес\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Парола\\\" formControlName=\\\"password\\\" required>\\n        <mat-error>\\n         Моля въведете парола\\n        </mat-error>\\n      </mat-form-field>\\n      <button mat-raised-button color=\\\"primary\\\">\\n        <span style=\\\"color: white\\\">Вход</span>\\n      </button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<mat-nav-list *ngIf=\\\"getSecurityObject()\\\">\\n  <div class=\\\"profile-card\\\" *ngIf=\\\"getSecurityObject() && getSecurityObject().authenticated\\\">\\n    <div class=\\\"header\\\">\\n      <h2>{{getSecurityObject().username}}</h2>\\n      <h4>Роля: {{ getRepresentationTextForRoles(getSecurityObject().authorities) }}</h4>\\n    </div>\\n    <img src=\\\"https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png\\\" alt=\\\"profile-icon\\\">\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n\\n  <h2 matSubheader>Операции</h2>\\n\\n  <div *ngIf=\\\"!getSecurityObject()\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/login\\\"> <mat-icon>lock</mat-icon>Вход</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n      <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/restaurants\\\">\\n        <mat-icon>list</mat-icon>\\n        {{isAuthenticatedForRole('OWNER') ? 'Моите ресторанти' : 'Ресторанти'}}\\n      </a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/restaurants/create\\\">\\n      <mat-icon>restaurant</mat-icon> Добави ресторант</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/products/create\\\">\\n      <mat-icon>fastfood</mat-icon>Добави продукт</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/import\\\">\\n      <mat-icon>upload</mat-icon>Импортиране на продукти\\n    </a>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n\\n  <h2 matSubheader>Потребители</h2>\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/users/create\\\">\\n      <mat-icon>group_add</mat-icon>Добави потребител</a>\\n  </div>\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/users/all\\\">\\n      <mat-icon>supervisor_account</mat-icon>Всички потребители</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/my-profile\\\">\\n      <mat-icon>edit</mat-icon>Редактирай профила си</a>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" (click)=\\\"logout()\\\">\\n      <mat-icon>settings</mat-icon>Настройки</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" (click)=\\\"logout()\\\">\\n      <mat-icon>logout</mat-icon>Изход</a>\\n  </div>\\n</mat-nav-list>\\n\";","export default \"<h2>Добави категория</h2>\\n<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\">\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Име на категорията\\\" formControlName=\\\"title\\\" required>\\n        <mat-error>\\n          Моля въведете име на категорията\\n        </mat-error>\\n      </mat-form-field>\\n      <br>\\n      <button mat-raised-button mat-dialog-close color=\\\"primary\\\" class=\\\"add-restaurant-button text-white\\\" (click)=\\\"addCategory(data)\\\"> <mat-icon>add</mat-icon> Добави</button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\\n\";","export default \"<br>\\n<div *ngIf=\\\"selectedRestaurantId\\\">\\n  <a routerLink=\\\"/restaurants/{{selectedRestaurantId}}/products\\\">Вижте продуктите на ресторанта</a>\\n</div>\\n<h2 class=\\\"text-center\\\">Добави продукт</h2>\\n<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-label>Изберете ресторант</mat-label>\\n        <mat-select formControlName=\\\"selectedRestaurant\\\" (selectionChange)=\\\"onSelectRestaurant()\\\">\\n          <mat-option *ngFor=\\\"let restaurant of restaurants\\\" [value]=\\\"restaurant.id\\\">\\n            {{restaurant.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Изберете меню</mat-label>\\n        <mat-select formControlName=\\\"selectedMenu\\\" multiple>\\n          <mat-option *ngFor=\\\"let menu of menus\\\" [value]=\\\"menu\\\">\\n            {{menu}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Въведете име на продукт\\\" formControlName=\\\"title\\\" required>\\n        <mat-error>\\n          Моля въведете име на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input type=\\\"number\\\" matInput placeholder=\\\"Въведете цена на продукт\\\" formControlName=\\\"price\\\" required>\\n        <mat-error>\\n          Моля въведете цена на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <textarea matInput placeholder=\\\"Въведете описание на продукт\\\" formControlName=\\\"description\\\" required> </textarea>\\n        <mat-error>\\n          Моля въведете описание на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Въведете алергени за продукт пример: (яйца,мляко,подправки)\\\" formControlName=\\\"allergens\\\" required>\\n        <mat-error>\\n          Моля въведете алергени на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Въведете тагове за продукт\\\" formControlName=\\\"tags\\\" required>\\n        <mat-error>\\n          Моля въведете тагове на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-10\\\">\\n            <mat-label>Изберете категория</mat-label>\\n            <mat-select formControlName=\\\"category\\\">\\n              <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category\\\">\\n                {{category.title}}\\n              </mat-option>\\n            </mat-select>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNewCategory(selectedRestaurantId, $event)\\\">\\n              <mat-icon>add</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </mat-form-field>\\n      <h3>Избери картинка</h3>\\n      <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInput.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n      <span *ngIf=\\\"selectedImage\\\" class=\\\"mat-active\\\">\\n        Избран файл: {{selectedImage}}\\n      </span>\\n      <input hidden (change)=\\\"onFileSelect($event)\\\" #fileInput type=\\\"file\\\" id=\\\"file\\\">\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"add-product-button text-white\\\" (click)=\\\"addProduct()\\\"> <mat-icon>add</mat-icon> Добави</button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\\n\";","export default \"<h2 class=\\\"text-center\\\">Редактирай продукт</h2>\\n<div class=\\\"loading-spinner\\\" *ngIf=\\\"!fetchedProduct\\\">\\n  <div>\\n    <mat-progress-spinner\\n      class=\\\"example-margin\\\"\\n      [color]=\\\"color\\\"\\n      [mode]=\\\"mode\\\"\\n      [value]=\\\"value\\\">\\n    </mat-progress-spinner>\\n  </div>\\n</div>\\n<mat-card *ngIf=\\\"product\\\">\\n  <mat-card-content>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-5\\\">\\n        <img mat-card-xl-image src=\\\"data:{{product.contentType}};base64,{{product.image}}\\\" alt=\\\"\\\">\\n      </div>\\n      <div class=\\\"col-md-7\\\">\\n        <form [formGroup]=\\\"form\\\">\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"title\\\">Име на продукта</label>\\n            <input matInput formControlName=\\\"title\\\" required id=\\\"title\\\">\\n            <mat-error>\\n              Моля въведете име на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"price\\\">Цена</label>\\n            <input type=\\\"number\\\" matInput formControlName=\\\"price\\\" id=\\\"price\\\" required>\\n            <mat-error>\\n              Моля въведете цена на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"description\\\">Описание</label>\\n            <textarea matInput formControlName=\\\"description\\\" required id=\\\"description\\\"> </textarea>\\n            <mat-error>\\n              Моля въведете описание на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"allergens\\\">Алергени</label>\\n            <input matInput formControlName=\\\"allergens\\\" id=\\\"allergens\\\" required>\\n            <mat-error>\\n              Моля въведете алергени на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"tags\\\">Тагове</label>\\n            <input matInput formControlName=\\\"tags\\\" id=\\\"tags\\\" required>\\n            <mat-error>\\n              Моля въведете тагове на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-10\\\">\\n                <mat-label>Изберете категория</mat-label>\\n                <mat-select formControlName=\\\"category\\\">\\n                  <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category\\\">\\n                    {{category.title}}\\n                  </mat-option>\\n                </mat-select>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNewCategory(restaurantId, $event)\\\">\\n                  <mat-icon>add</mat-icon>\\n                </button>\\n              </div>\\n            </div>\\n          </mat-form-field>\\n          <h3>Избери картинка</h3>\\n          <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInput.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n          <span *ngIf=\\\"selectedImage\\\" class=\\\"mat-active\\\">\\n        Избран файл: {{selectedImage}}\\n      </span>\\n          <input hidden (change)=\\\"onFileSelect($event)\\\" #fileInput type=\\\"file\\\" id=\\\"file\\\">\\n          <button mat-raised-button color=\\\"primary\\\" class=\\\"edit-product-button\\\" (click)=\\\"editProduct()\\\"> <mat-icon>create</mat-icon> Редактирай</button>\\n        </form>\\n      </div>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<mat-card>\\n  <div class=\\\"text-center\\\">Импортиране на продукти</div>\\n\\n  <mat-card-content>\\n    <form [formGroup]=\\\"importProductsForm\\\" #form=\\\"ngForm\\\">\\n      <mat-form-field>\\n        <mat-label>Изберете ресторант</mat-label>\\n        <mat-select formControlName=\\\"restaurantId\\\">\\n          <mat-option>-----</mat-option>\\n          <mat-option *ngFor=\\\"let restaurant of restaurants\\\" [value]=\\\"restaurant.id\\\">\\n            {{restaurant.name}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>Липсващ ресторант</mat-error>\\n      </mat-form-field>\\n\\n      <span>Файл: {{importFile?.name}}</span>\\n\\n      <div>\\n        <button mat-raised-button [disabled]=\\\"restaurantId.invalid || !importFile\\\" (click)=\\\"importProducts()\\\">Импортиране на продукти</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"importDialog.click()\\\" class=\\\"text-white\\\">\\n          <mat-icon>attachment</mat-icon>\\n          Изберете файл\\n        </button>\\n        <input #importDialog\\n               formControlName=\\\"importFilename\\\"\\n               type=\\\"file\\\"\\n               accept=\\\".csv\\\"\\n               (change)=\\\"onImportFileChosen($event)\\\"\\n               hidden/>\\n      </div>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<br>\\n<div class=\\\"text-center border-bottom\\\">\\n  <h2>Продукти от ресторант: <u>{{restaurant?.name}}</u></h2>\\n</div>\\n<mat-form-field>\\n  <mat-label>Търсете продукт</mat-label>\\n  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Търсете продукт\\\">\\n</mat-form-field>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"products && products.length === 0\\\">\\n  Все още няма продукти за този ресторант\\n</div>\\n<div class=\\\"loading-spinner\\\" *ngIf=\\\"!products\\\">\\n  <div>\\n    <mat-progress-spinner\\n      class=\\\"example-margin\\\"\\n      [color]=\\\"color\\\"\\n      [mode]=\\\"mode\\\"\\n      [value]=\\\"value\\\">\\n    </mat-progress-spinner>\\n  </div>\\n</div>\\n<table *ngIf=\\\"products\\\" mat-table\\n       [dataSource]=\\\"dataSource\\\" multiTemplateDataRows\\n       class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of columnsToDisplay\\\">\\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <span *ngIf=\\\"column === 'edit'\\\">\\n        <button mat-icon-button (click)=\\\"goToEditProduct(restaurant.id, element.id)\\\">\\n          <mat-icon color=\\\"primary\\\">edit</mat-icon>\\n        </button>\\n      </span>\\n      <span *ngIf=\\\"column === 'delete'\\\">\\n        <button mat-icon-button (click)=\\\"deleteProduct(element)\\\">\\n          <mat-icon color=\\\"warn\\\">delete</mat-icon>\\n        </button>\\n      </span>\\n      <span *ngIf=\\\"column !== 'edit' && column !== 'delete'\\\">\\n         {{ getDisplayTitleCategory(element, column)}}\\n      </span>\\n    </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\n    <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10\\\">\\n          <div class=\\\"example-element-detail\\\"\\n               [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n            <div class=\\\"example-element-diagram\\\">\\n              <div class=\\\"example-element-symbol\\\"> <img mat-card-sm-image class=\\\"image-sm\\\" src=\\\"data:{{element.contentType}};base64,{{element.image}}\\\" alt=\\\"Restaurant photo\\\"></div>\\n            </div>\\n            <div class=\\\"example-element-description\\\">\\n              <span class=\\\"example-element-description-attribution\\\">Описание на продукта:</span>\\n              {{element.description}}\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\"\\n      class=\\\"example-element-row\\\"\\n      [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n      (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n  </tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n</table>\\n\";","export default \"<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\">\\n      <h2>Добави ресторант</h2>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Име на ресторант\\\" formControlName=\\\"name\\\" required>\\n        <mat-error>\\n          Моля въведете име на ресторанта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Локация на ресторанта\\\" formControlName=\\\"location\\\" required>\\n        <mat-error>\\n          Моля въведете локация на ресторанта\\n        </mat-error>\\n      </mat-form-field>\\n      <h3>Избери картинка</h3>\\n      <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInput.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n      <span *ngIf=\\\"selectedImage\\\" class=\\\"mat-active\\\">\\n        Избран файл: {{selectedImage}}\\n      </span>\\n      <input hidden (change)=\\\"onFileSelect($event)\\\" #fileInput type=\\\"file\\\" id=\\\"file\\\">\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"add-restaurant-button text-white\\\" (click)=\\\"addRestaurant()\\\"> <mat-icon>add</mat-icon> <span>Добави</span></button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<h2 class=\\\"text-center\\\">Редактирате ресторант: {{restaurant.name}}</h2>\\n<mat-card>\\n  <mat-card-content>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <img mat-card-xl-image src=\\\"data:{{restaurant.contentType}};base64,{{restaurant.image}}\\\" alt=\\\"\\\">\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <form [formGroup]=\\\"form\\\">\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <input matInput placeholder=\\\"Име на ресторант\\\" formControlName=\\\"name\\\" required>\\n            <mat-error>\\n              Моля въведете име на ресторанта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <input matInput placeholder=\\\"Локация на ресторанта\\\" formControlName=\\\"location\\\" required>\\n            <mat-error>\\n              Моля въведете локация на ресторанта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <mat-label>Статус на ресторант</mat-label>\\n            <mat-select id=\\\"restaurant-status\\\" formControlName=\\\"active\\\">\\n              <mat-option value=\\\"inactive\\\">неактивен</mat-option>\\n              <mat-option value=\\\"active\\\">активен</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <h3>Избери картинка</h3>\\n          <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInput.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n          <span *ngIf=\\\"selectedImage\\\" class=\\\"mat-active\\\">\\n        Избран файл: {{selectedImage}}\\n      </span>\\n          <input hidden (change)=\\\"onFileSelect($event)\\\" #fileInput type=\\\"file\\\" id=\\\"file\\\">\\n          <button mat-raised-button color=\\\"primary\\\" class=\\\"edit-restaurant-button\\\" (click)=\\\"editRestaurant(restaurant.id)\\\"> <mat-icon>create</mat-icon> Редактирай</button>\\n        </form>\\n      </div>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<mat-dialog-content>\\n  <p>\\n    {{message}}\\n  </p>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"center\\\">\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onConfirmClick()\\\" tabindex=\\\"1\\\">{{confirmButtonText}}</button>\\n  <button mat-raised-button mat-dialog-close tabindex=\\\"-1\\\">{{cancelButtonText}}</button>\\n</mat-dialog-actions>\\n\";","export default \"<div class=\\\"text-center\\\">\\n  <h2>Всички ресторанти</h2>\\n</div>\\n<mat-divider></mat-divider>\\n<input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Търси ресторант\\\" id=\\\"search-box\\\" (ngModelChange)=\\\"fetchRestaurants({pageIndex:0})\\\" [(ngModel)]=\\\"searchText\\\" aria-label=\\\"Search\\\">\\n\\n<div class=\\\"loading-spinner\\\" *ngIf=\\\"!restaurants\\\">\\n  <div>\\n    <mat-progress-spinner\\n      class=\\\"example-margin\\\"\\n      [color]=\\\"color\\\"\\n      [mode]=\\\"mode\\\"\\n      [value]=\\\"value\\\">\\n    </mat-progress-spinner>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"restaurants\\\">\\n  <mat-card class=\\\"example-card\\\" *ngFor=\\\"let restaurant of restaurants\\\" id=\\\"restaurant-cards\\\">\\n    <button class=\\\"right\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <button mat-menu-item (click)=\\\"goToProducts(restaurant.id)\\\">\\n        <mat-icon>create</mat-icon>\\n        <span>\\n        Редактирай\\n      </span>\\n      </button>\\n      <button *ngIf=\\\"isAdmin()\\\" mat-menu-item (click)=\\\"deleteRestaurant(restaurant)\\\">\\n        <mat-icon>delete_forever</mat-icon>\\n        <span>Изтрий</span>\\n      </button>\\n    </mat-menu>\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n      <mat-card-title>\\n        <a routerLink=\\\"/restaurants/{{restaurant.id}}/products\\\">{{restaurant.name}}</a>\\n      </mat-card-title>\\n      <mat-card-subtitle>{{restaurant.location}}</mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content class=\\\"text-center\\\">\\n      <img mat-card-xl-image src=\\\"data:{{restaurant.contentType}};base64,{{restaurant.image}}\\\" alt=\\\"Restaurant photo\\\">\\n    </mat-card-content>\\n  </mat-card>\\n\\n    <mat-paginator [length]=\\\"totalElements\\\"\\n                   [pageSize]=\\\"size\\\"\\n                   [pageIndex]=\\\"page\\\"\\n                   [pageSizeOptions]=\\\"[6]\\\"\\n                   (page)=\\\"fetchRestaurants($event)\\\">\\n    </mat-paginator>\\n</div>\\n\\n\\n\";","export default \"<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\">\\n      <h2>Добави потребител</h2>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Имейл на потребителя\\\" formControlName=\\\"username\\\" required>\\n        <mat-error>\\n          Моля въведете имейл на потребителя\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Парола на потребителя\\\" formControlName=\\\"password\\\" required>\\n        <mat-error>\\n          Моля въведете парола на потребителя\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Изберете ресторант</mat-label>\\n        <mat-select formControlName=\\\"restaurantId\\\">\\n          <mat-option *ngFor=\\\"let restaurant of restaurants\\\" [value]=\\\"restaurant.id\\\">\\n            {{restaurant.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Изберете роля на потребителя</mat-label>\\n        <mat-select formControlName=\\\"roles\\\" multiple>\\n          <mat-option value=\\\"WAITER\\\">Сервитьор</mat-option>\\n          <mat-option value=\\\"OWNER\\\">Собственик</mat-option>\\n          <mat-option *ngIf=\\\"isAdmin()\\\" value=\\\"ADMIN\\\">Админ</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"add-restaurant-button text-white\\\" (click)=\\\"addUser()\\\"> <mat-icon>add</mat-icon> Добави</button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<div class=\\\"text-center\\\">\\n  <h2>Всички Потребители</h2>\\n</div>\\n<mat-divider></mat-divider>\\n<input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Търси сервитьор\\\" id=\\\"search-box\\\" [(ngModel)]=\\\"text\\\" aria-label=\\\"Search\\\">\\n<br>\\n<mat-divider></mat-divider>\\n<a mat-button color=\\\"primary\\\" routerLink=\\\"/users/create\\\"><mat-icon>add</mat-icon>Добави нов потребител</a>\\n<mat-divider></mat-divider>\\n<mat-tab-group>\\n  <mat-tab label=\\\"{{restaurant.name}}\\\" *ngFor=\\\"let restaurant of restaurants\\\">\\n\\n    <mat-card class=\\\"example-card\\\" *ngIf=\\\"restaurant.owner\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>{{restaurant.owner.username}}</mat-card-title>\\n        <mat-card-subtitle *ngIf=\\\"restaurant.owner && restaurant.owner.username\\\"></mat-card-subtitle>\\n        <mat-card-subtitle>Роли: {{getRepresentationTextForRoles(['OWNER']).join(',')}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content class=\\\"text-center\\\">\\n        <img mat-card-sm-image src=\\\"https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png\\\" alt=\\\"user photo\\\">\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"text-center\\\">\\n        <a mat-button color=\\\"primary\\\" routerLink=\\\"/users/{{restaurant.owner.username}}/edit\\\"><mat-icon>create</mat-icon>Редактирай</a>\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"deleteUser(restaurant.owner)\\\"><mat-icon>delete_forever</mat-icon>Изтрий</button>\\n      </mat-card-actions>\\n    </mat-card>\\n\\n    <mat-card class=\\\"example-card\\\" *ngFor=\\\"let user of restaurant.waiters | filterUsers: text\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>{{user.username}}</mat-card-title>\\n        <mat-card-subtitle *ngIf=\\\"user.restaurant && user.restaurant.name\\\">Ресторант: {{user?.restaurant?.name}}</mat-card-subtitle>\\n        <mat-card-subtitle>Роли: {{getRepresentationTextForRoles(user.roles).join(',')}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content class=\\\"text-center\\\">\\n        <img mat-card-sm-image src=\\\"https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png\\\" alt=\\\"user photo\\\">\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"text-center\\\">\\n        <a mat-button color=\\\"primary\\\" routerLink=\\\"/users/{{user.id}}/edit\\\"><mat-icon>create</mat-icon>Редактирай</a>\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"deleteUser(user)\\\"><mat-icon>delete_forever</mat-icon>Изтрий</button>\\n      </mat-card-actions>\\n    </mat-card>\\n    <div *ngIf=\\\"restaurant.waiters.length === 0 && !restaurant.owner\\\">\\n      <br>\\n      <span class=\\\"text-danger\\\">Няма потребители за този ресторант</span>\\n    </div>\\n  </mat-tab>\\n</mat-tab-group>\\n\";","export default \"#search-box {\\n  margin-bottom: 30px;\\n  margin-top: 30px;\\n}\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\nmat-drawer {\\n  width: 300px;\\n}\\nmat-drawer-container {\\n  height: 100%;\\n}\\nmat-drawer-content {\\n  padding: 20px;\\n}\\nul li {\\n  list-style: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBRUE7RUFDRSxZQUFZO0FBQ2Q7QUFFQTtFQUNFLGFBQWE7QUFDZjtBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjc2VhcmNoLWJveCB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG59XG46aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwJTtcbn1cbm1hdC1kcmF3ZXIge1xuICB3aWR0aDogMzAwcHg7XG59XG5cbm1hdC1kcmF3ZXItY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5tYXQtZHJhd2VyLWNvbnRlbnQge1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4iXX0= */\";","import {Component} from '@angular/core';\nimport {SecurityObjectModel} from './models/security-object.model';\nimport {AuthenticationService} from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'RMS-admin';\n  sideBarOpened = false;\n\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  toggle() {\n    this.sideBarOpened = !this.sideBarOpened;\n  }\n\n  getSecurityObject(): SecurityObjectModel {\n    return JSON.parse(window.localStorage.getItem('user'));\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {RoutingModule} from './routing.module';\nimport {AppComponent} from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NavigationComponent} from './components/common/navigation/navigation.component';\nimport {ListRestaurantsComponent} from './components/restaurant/list-restaurants/list-restaurants.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CreateRestaurantComponent} from './components/restaurant/create-restaurant/create-restaurant.component';\nimport {ProductListComponent} from './components/product/product-list/product-list.component';\nimport {CreateProductComponent} from './components/product/create-product/create-product.component';\nimport {EditRestaurantComponent} from './components/restaurant/edit-restaurant/edit-restaurant.component';\nimport {HomeComponent} from './components/common/home/home.component';\nimport {LoginComponent} from './components/common/login/login.component';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TokenInterceptor} from './security/token.interceptor';\nimport {ProductListFilterPipe} from './pipes/product-list-filter.pipe';\nimport {ListUsersComponent} from './components/user/list-users/list-users.component';\nimport {MaterialModule} from './modules/material/material-module';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ConfirmationDialogComponent} from './components/restaurant/list-restaurants/confirmation-dialog.component';\nimport {UserListFilterPipe} from './pipes/user-list-filter.pipe';\nimport { ImportProductsComponent } from './components/product/import-products/import-products.component';\nimport {CreateUserComponent} from './components/user/create-user/create-user.component';\nimport { MyProfileComponent } from './components/account/my-profile/my-profile.component';\nimport {CreateNewCategoryDialogComponent} from './components/product/create-product/create-new-category.dialog';\nimport {EditProductComponent} from \"./components/product/edit-product/edit-product.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    ListRestaurantsComponent,\n    CreateRestaurantComponent,\n    ProductListComponent,\n    CreateProductComponent,\n    EditRestaurantComponent,\n    HomeComponent,\n    EditProductComponent,\n    LoginComponent,\n    ProductListFilterPipe,\n    UserListFilterPipe,\n    ListUsersComponent,\n    ConfirmationDialogComponent,\n    CreateNewCategoryDialogComponent,\n    CreateUserComponent,\n    MyProfileComponent,\n    ImportProductsComponent\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    MaterialModule,\n    FlexLayoutModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  }],\n  entryComponents: [CreateNewCategoryDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC9teS1wcm9maWxlL215LXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\";","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  restaurantsCount: number;\n  menusCount: number;\n  productsCount: number;\n\n  constructor() { }\n\n  async ngOnInit() {\n  }\n\n}\n","export default \"mat-card {\\n  max-width: 400px;\\n  margin: 2em auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogMmVtIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiJdfQ== */\";","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  constructor(private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService,\n              private toastrService: ToastrService,\n              private router: Router) {\n    this.form = formBuilder.group({\n      username: [],\n      password: []\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  async login() {\n   this.authenticationService.login(this.form.getRawValue())\n     .then(data => {\n        if ((data.body as SecurityObjectModel).authorities?.includes('USER')) {\n          return Promise.reject(\n            {\n                  error: {\n                    message: 'Клиенти не могат да достъпват администраторската система'\n                  }});\n        }\n        this.authenticationService.setSecurityObject(data.body as SecurityObjectModel);\n        this.toastrService.success('Успешен вход!');\n        this.router.navigateByUrl('/restaurants');\n   })\n     .catch(err => {\n       if (err.error?.message) {\n         this.toastrService.error(err.error?.message);\n       } else {\n         this.toastrService.error(err);\n       }\n     });\n  }\n}\n","export default \".profile-card {\\n  text-align: center;\\n  padding: 0 20px 20px 20px;\\n}\\n\\n.profile-card img {\\n  width: 120px;\\n  height: 120px;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  border-radius: 50%;\\n}\\n\\n:host mat-icon {\\n  vertical-align: middle;\\n  margin-right: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixvQkFBaUI7S0FBakIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvbW1vbi9uYXZpZ2F0aW9uL25hdmlnYXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLWNhcmQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMjBweCAyMHB4IDIwcHg7XG59XG5cbi5wcm9maWxlLWNhcmQgaW1nIHtcbiAgd2lkdGg6IDEyMHB4O1xuICBoZWlnaHQ6IDEyMHB4O1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG46aG9zdCBtYXQtaWNvbiB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cbiJdfQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {AppSettings} from '../../../global/app.settings';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  ngOnInit() {\n  }\n\n  getSecurityObject(): SecurityObjectModel {\n    return JSON.parse(window.localStorage.getItem('user'));\n  }\n\n  isAuthenticatedForRole(role: string) {\n    const user = JSON.parse(window.localStorage.getItem('user'));\n    if (user && user.authorities) {\n      return role.includes(user.authorities);\n    } else {\n      return false;\n    }\n  }\n\n  getRepresentationTextForRoles(roles: string[]): string[] {\n    return AppSettings.getRepresentationTextForRoles(roles);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n}\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {CategoryService} from '../../../services/category.service';\nimport {CategoryModel} from '../../../models/category.model';\n\n@Component({\n  selector: 'app-create-new-category.dialog',\n  templateUrl: 'create-new-category.dialog.html',\n})\nexport class CreateNewCategoryDialogComponent {\n  form: FormGroup;\n  category: CategoryModel = {};\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string, formBuilder: FormBuilder,\n              private categoryService: CategoryService) {\n    this.form = formBuilder.group({\n      title: []\n    });\n  }\n\n  async addCategory(data: any) {\n    this.category = {\n      title: this.title.value\n    };\n    await this.categoryService.addCategory(data.restaurantId, this.category);\n  }\n\n  get title() {\n    return this.form.get('title');\n  }\n}\n","export default \"mat-card {\\n  max-width: 500px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n.add-product-button {\\n  margin-left: 10px;\\n}\\n\\n.mat-dialog-container {\\n  margin: 0 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2NyZWF0ZS1wcm9kdWN0L2NyZWF0ZS1wcm9kdWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2NyZWF0ZS1wcm9kdWN0L2NyZWF0ZS1wcm9kdWN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gIG1heC13aWR0aDogNTAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5hZGQtcHJvZHVjdC1idXR0b24ge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuLm1hdC1kaWFsb2ctY29udGFpbmVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4iXX0= */\";","import { ProductService } from '../../../services/product.service';\nimport { RestaurantService } from '../../../services/restaurant.service';\nimport { ProductModel } from '../../../models/product-list.model';\nimport { RestaurantListModel } from '../../../models/restaurant-list.model';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {AppSettings} from '../../../global/app.settings';\nimport {Router} from '@angular/router';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {CategoryModel} from '../../../models/category.model';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateNewCategoryDialogComponent} from './create-new-category.dialog';\nimport {CategoryService} from '../../../services/category.service';\n\n@Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.css']\n})\nexport class CreateProductComponent implements OnInit {\n\n  selectedMenuId: string;\n  selectedRestaurantId: string;\n  restaurants: RestaurantListModel[];\n  menus: string[];\n  user: SecurityObjectModel;\n  form: FormGroup;\n  product: ProductModel = {};\n  selectedImage: string;\n  categories: CategoryModel[];\n  private selectedRestaurantFullObject: RestaurantListModel;\n  addedCategory: CategoryModel;\n\n  constructor(formBuilder: FormBuilder,\n              private restaurantService: RestaurantService,\n              private productService: ProductService,\n              private toastrService: ToastrService,\n              private router: Router,\n              private authenticationService: AuthenticationService,\n              private dialog: MatDialog,\n              private categoryService: CategoryService) {\n    this.form = formBuilder.group({\n      selectedRestaurant: [],\n      selectedMenu: [],\n      title: [],\n      price: [],\n      description: [],\n      allergens: [],\n      tags: [],\n      category: [],\n      image: ['']\n  });\n  }\n\n  ngOnInit() {\n    this.fetchRestaurants();\n  }\n\n  addProduct() {\n    this.product = {\n      title: this.title.value,\n      price: this.price.value,\n      quantity: 1,\n      description: this.description.value,\n      allergens: this.allergens.value && this.allergens.value.split(','),\n      tags: this.tags.value && this.tags.value.split(','),\n      category: this.category.value,\n      menus: this.selectedMenu.value,\n      restaurantId: this.selectedRestaurant.value\n    };\n    this.selectedMenuId = this.selectedMenu.value || ['default'];\n    this.selectedRestaurantId = this.selectedRestaurant.value;\n    const formData = new FormData();\n    formData.append('file', this.form.get('image').value);\n    this.restaurantService.addProduct(this.selectedRestaurant.value, this.product)\n      .then(res => {\n        this.productService.addImageToProduct(res.body.id, formData)\n          .then(() => {\n            this.toastrService.success('Успешно добавихте продукта');\n          })\n          .catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n      }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  private async fetchRestaurants() {\n    this.user = this.authenticationService.getSecurityObject();\n    if (this.user.authorities && this.user.authorities.includes('OWNER')) {\n      this.restaurants = (await this.restaurantService.getAllNames(this.user.username));\n    } else {\n      this.restaurants = (await this.restaurantService.getAllNames(undefined));\n    }\n  }\n\n  async onSelectRestaurant() {\n    const restaurantId = this.selectedRestaurant.value;\n    this.restaurantService.getById(restaurantId).then(selectedRestaurantResponse => {\n      this.menus = (selectedRestaurantResponse).body.menus || ['default'];\n      this.categories = selectedRestaurantResponse.body.categories;\n      this.selectedRestaurantFullObject = selectedRestaurantResponse.body;\n    });\n  }\n\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.selectedImage = event.target.files[0]?.name;\n      this.form.get('image').setValue(file);\n    }\n  }\n\n  addNewCategory(selectedRestaurantId: string, event: Event) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.dialog.open(CreateNewCategoryDialogComponent, {\n      data: {\n        restaurantId: this.selectedRestaurant.value\n      },\n      height: '240px',\n      width: '450px',\n    });\n\n    this.dialog.afterAllClosed.subscribe(result => {\n      this.categoryService.getAllCategoriesByRestaurantId(this.selectedRestaurant.value).then(categories => {\n        this.categories = categories;\n        if (this.categories.length !== 0) {\n          this.addedCategory = this.categories[this.categories.length - 1];\n          this.category.setValue(this.addedCategory);\n        }\n      });\n    });\n  }\n\n  get selectedRestaurant() {\n    return this.form.get('selectedRestaurant');\n  }\n\n  get selectedMenu() {\n    return this.form.get('selectedMenu');\n  }\n\n  get title() {\n    return this.form.get('title');\n  }\n\n  get price() {\n    return this.form.get('price');\n  }\n\n  get description() {\n    return this.form.get('description');\n  }\n\n  get allergens() {\n    return this.form.get('allergens');\n  }\n\n  get tags() {\n    return this.form.get('tags');\n  }\n\n  get category() {\n    return this.form.get('category');\n  }\n}\n","export default \"mat-card {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n.edit-product-button {\\n  margin-left: 10px;\\n}\\n\\n.loading-spinner {\\n  position: relative;\\n  left: 50%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2VkaXQtcHJvZHVjdC9lZGl0LXByb2R1Y3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0FBQ1giLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Byb2R1Y3QvZWRpdC1wcm9kdWN0L2VkaXQtcHJvZHVjdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xuICBtYXgtd2lkdGg6IDgwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5tYXQtZm9ybS1maWVsZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZWRpdC1wcm9kdWN0LWJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4ubG9hZGluZy1zcGlubmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1MCU7XG59XG4iXX0= */\";","import { ProductService } from '../../../services/product.service';\nimport { ProductModel } from '../../../models/product-list.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {RestaurantService} from '../../../services/restaurant.service';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {AppSettings} from '../../../global/app.settings';\nimport {CategoryModel} from '../../../models/category.model';\nimport {CreateNewCategoryDialogComponent} from '../create-product/create-new-category.dialog';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CategoryService} from '../../../services/category.service';\nimport {ThemePalette} from '@angular/material/core';\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n  isSelectedNewImage: boolean;\n  form: FormGroup;\n  productId: string;\n  product: ProductModel = {title: ''};\n  restaurant: RestaurantListModel;\n  selectedImage: string;\n  categories: CategoryModel[];\n  restaurantId: string;\n  color: ThemePalette = 'accent';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 30;\n  fetchedProduct = false;\n\n  constructor(private formBuilder: FormBuilder,\n              private activeRoute: ActivatedRoute,\n              private restaurantService: RestaurantService,\n              private productService: ProductService,\n              private toastrService: ToastrService,\n              private router: Router,\n              private dialog: MatDialog,\n              private categoryService: CategoryService) {\n    this.form = formBuilder.group({\n      title: [],\n      price: [],\n      quantity: [],\n      description: [],\n      allergens: [],\n      tags: [],\n      category: [],\n      image: ['']\n    });\n  }\n\n  async ngOnInit() {\n    await this.fetchProduct();\n  }\n\n  setFormData() {\n    this.form = this.formBuilder.group({\n      title: [this.product.title],\n      price: [this.product.price],\n      quantity: [this.product.quantity],\n      description: [this.product.description],\n      allergens: [this.product.allergens],\n      tags: [this.product.tags],\n      category: [this.product.category],\n      image: ['']\n    });\n  }\n\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      this.isSelectedNewImage = true;\n      const file = event.target.files[0];\n      this.selectedImage = event.target.files[0]?.name;\n      this.form.get('image').setValue(file);\n    }\n  }\n\n  async editProduct() {\n    this.product.title = this.form.get('title').value;\n    this.product.price = this.form.get('price').value;\n    this.product.quantity = this.form.get('quantity').value;\n    this.product.description = this.form.get('description').value;\n    this.product.allergens = this.form.get('allergens').value;\n    this.product.tags = this.form.get('tags').value;\n    this.product.category = this.form.get('category').value;\n\n    this.productService.editProduct(this.product.id, this.product)\n      .then(response => {\n        if (this.isSelectedNewImage) {\n          const formData = new FormData();\n          formData.append('file', this.form.get('image').value);\n          this.productService.addImageToProduct(this.product.id, formData)\n            .then(res => {\n              this.toastrService.success('Успешно редактирахте продукта');\n              this.router.navigateByUrl(`/restaurants/${this.restaurant.id}/products`);\n            })\n            .catch(err => {\n              this.toastrService.warning('Проблем при качването на снимката');\n            });\n        } else {\n          this.toastrService.success('Успешно редактирахте продукта');\n          this.router.navigateByUrl(`/restaurants/${this.restaurant.id}/products`);\n        }\n      }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  private async fetchProduct(): Promise<void> {\n    const restaurantId = this.activeRoute.snapshot.paramMap.get('id');\n    this.restaurantId = restaurantId;\n    const productId = this.activeRoute.snapshot.paramMap.get('productId');\n    this.productId = productId;\n    this.product = (await this.productService.getById(productId)).body;\n    this.restaurant = (await this.restaurantService.getById(restaurantId)).body;\n    this.categories = this.restaurant.categories;\n    this.setFormData();\n    this.fetchedProduct = true;\n  }\n\n  addNewCategory(selectedRestaurantId: string, event: Event) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.dialog.open(CreateNewCategoryDialogComponent, {\n      data: {\n        restaurantId: this.restaurant.id\n      },\n      height: '240px',\n      width: '450px',\n    });\n\n    this.dialog.afterAllClosed.subscribe(result => {\n      this.categoryService.getAllCategoriesByRestaurantId(this.restaurant.id).then(categories => {\n        this.categories = categories;\n        if (this.categories.length !== 0) {\n          const addedCategory = this.categories[this.categories.length - 1];\n          this.form.get('category').setValue(addedCategory);\n        }\n      });\n    });\n  }\n}\n","export default \".mat-raised-button {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2ltcG9ydC1wcm9kdWN0cy9pbXBvcnQtcHJvZHVjdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdC9pbXBvcnQtcHJvZHVjdHMvaW1wb3J0LXByb2R1Y3RzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJhaXNlZC1idXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { RestaurantListModel } from '../../../models/restaurant-list.model';\nimport { ProductService } from '../../../services/product.service';\nimport { RestaurantService } from '../../../services/restaurant.service';\n\n@Component({\n  selector: 'app-import-products',\n  templateUrl: './import-products.component.html',\n  styleUrls: ['./import-products.component.css']\n})\nexport class ImportProductsComponent implements OnInit {\n\n  @ViewChild(\"form\")\n  form: NgForm;\n\n  importProductsForm: FormGroup;\n  restaurants: RestaurantListModel[];\n  importFile: File;\n\n  constructor(private formBuilder: FormBuilder,\n              private restaurantService: RestaurantService,\n              private productService: ProductService,\n              private toasterService: ToastrService) {\n    this.buildImportProductsForm();\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.loadRestaurants();\n  }\n\n  onImportFileChosen(event) {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      this.importFile = selectedFile;\n    }\n  }\n\n  async importProducts(): Promise<void> {\n    try {\n      const restaurantId = this.restaurantId.value;\n      const formData = new FormData();\n      formData.append(\"importFile\", this.importFile);\n      const importProductsResponse = await this.productService.importProducts(restaurantId, formData);\n\n      if (importProductsResponse.status === 200) {\n        const importedProductsCount = importProductsResponse.body;\n        this.toasterService.success(`Успешно импортиране на ${importedProductsCount} продукти`);\n        this.clearFormFieldsAndData();\n      } else {\n        this.toasterService.error(\"Неуспешно импортиране на продукти\");\n      }\n    } catch (error) {\n      this.toasterService.error(\"Неуспешно импортиране на продукти\");\n      console.error(error);\n    }\n  }\n\n  private buildImportProductsForm(): void {\n    this.importProductsForm = this.formBuilder.group({\n      restaurantId: [\"\", Validators.required],\n      importFilename: [\"\", Validators.required]\n    });\n  }\n\n  private async loadRestaurants(): Promise<void> {\n    this.restaurants = await this.restaurantService.getAllNames();\n  }\n\n  private clearFormFieldsAndData(): void {\n    this.importProductsForm.reset();\n    this.form.resetForm();\n    this.importFile = null;\n  }\n\n  get restaurantId() { return this.importProductsForm.get(\"restaurantId\"); }\n\n  get importFilename() { return this.importProductsForm.get(\"importFilename\"); }\n}\n","export default \"#search-box {\\n  margin-bottom: 30px;\\n  margin-top: 30px;\\n}\\n\\nmat-form-field {\\n  width: 400px;\\n}\\n\\nmat-card {\\n  width: 30%;\\n  display: inline-block;\\n  margin: 10px;\\n}\\n\\nmat-card-content {\\n  margin-top: 10px;\\n}\\n\\nmat-card-header img {\\n  text-align: center;\\n  margin: 0 auto;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\ntr.example-detail-row {\\n  height: 0;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):hover {\\n  background: whitesmoke;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):active {\\n  background: #efefef;\\n}\\n\\n.example-element-row td {\\n  border-bottom-width: 0;\\n}\\n\\n.example-element-detail {\\n  overflow: hidden;\\n  display: flex;\\n}\\n\\n.example-element-diagram {\\n  min-width: 80px;\\n  padding: 8px;\\n  font-weight: lighter;\\n  margin: 8px 0;\\n  height: 104px;\\n}\\n\\n.example-element-symbol {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal;\\n}\\n\\n.example-element-description {\\n  padding: 16px;\\n}\\n\\n.example-element-description-attribution {\\n  opacity: 0.5;\\n}\\n\\n.image-sm {\\n  width: 20%;\\n  height: 15%;\\n}\\n\\n.actions {\\n  margin-top: -40px;\\n}\\n\\n.loading-spinner {\\n  position: relative;\\n  left: 50%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFHQTtFQUNFLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsU0FBUztBQUNYOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0VBQ1osb0JBQW9CO0VBQ3BCLGFBQWE7RUFDYixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFVBQVU7RUFDVixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsU0FBUztBQUNYIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzZWFyY2gtYm94IHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogNDAwcHg7XG59XG5cbm1hdC1jYXJkIHtcbiAgd2lkdGg6IDMwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDEwcHg7XG59XG5cbm1hdC1jYXJkLWNvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG5cbm1hdC1jYXJkLWhlYWRlciBpbWcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50ci5leGFtcGxlLWRldGFpbC1yb3cge1xuICBoZWlnaHQ6IDA7XG59XG5cbnRyLmV4YW1wbGUtZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZXNtb2tlO1xufVxuXG50ci5leGFtcGxlLWVsZW1lbnQtcm93Om5vdCguZXhhbXBsZS1leHBhbmRlZC1yb3cpOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICNlZmVmZWY7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtcm93IHRkIHtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1kZXRhaWwge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uZXhhbXBsZS1lbGVtZW50LWRpYWdyYW0ge1xuICBtaW4td2lkdGg6IDgwcHg7XG4gIHBhZGRpbmc6IDhweDtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIG1hcmdpbjogOHB4IDA7XG4gIGhlaWdodDogMTA0cHg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtc3ltYm9sIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1kZXNjcmlwdGlvbiB7XG4gIHBhZGRpbmc6IDE2cHg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtZGVzY3JpcHRpb24tYXR0cmlidXRpb24ge1xuICBvcGFjaXR5OiAwLjU7XG59XG5cbi5pbWFnZS1zbSB7XG4gIHdpZHRoOiAyMCU7XG4gIGhlaWdodDogMTUlO1xufVxuXG4uYWN0aW9ucyB7XG4gIG1hcmdpbi10b3A6IC00MHB4O1xufVxuXG4ubG9hZGluZy1zcGlubmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1MCU7XG59XG4iXX0= */\";","import {ProductService} from '../../../services/product.service';\nimport {ProductModel} from '../../../models/product-list.model';\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RestaurantService} from '../../../services/restaurant.service';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {AppSettings} from '../../../global/app.settings';\nimport {ToastrService} from 'ngx-toastr';\nimport {ConfirmationDialogComponent} from '../../restaurant/list-restaurants/confirmation-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ThemePalette} from '@angular/material/core';\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-menu-detail',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ProductListComponent implements OnInit {\n  text = '';\n  restaurant: RestaurantListModel;\n  products: ProductModel[];\n  columnsToDisplay = ['title', 'price', 'allergens', 'tags', 'category', 'menus', 'edit', 'delete'];\n  expandedElement: ProductModel | null;\n  dataSource;\n  color: ThemePalette = 'accent';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 30;\n\n  constructor(private restaurantService: RestaurantService,\n              private productService: ProductService,\n              private activeRoute: ActivatedRoute,\n              private toastrService: ToastrService,\n              private router: Router,\n              private dialog: MatDialog) { }\n\n  async ngOnInit() {\n    await this.fetchProducts();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  async deleteProduct(product: ProductModel) {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: {\n        message: `Сигурен ли си че искаш да изтриеш продукт '${product.title} ?'`,\n        buttonText: {\n          ok: 'Да',\n          cancel: 'Не'\n        }\n      }\n    });\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        const a = document.createElement('a');\n        a.click();\n        a.remove();\n        this.productService.deleteProduct(product.id)\n            .then(response => {\n              if (response.status === 204) {\n                this.toastrService.success('Изтрихте продукта успешно');\n                this.fetchProducts();\n              }\n            }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n      }\n    });\n  }\n\n  private async fetchProducts(): Promise<void> {\n    const restaurantId = this.activeRoute.snapshot.paramMap.get('id');\n    this.restaurant = (await this.restaurantService.getById(restaurantId)).body;\n    this.products = (await this.productService.getAllByRestaurantId(restaurantId)).body.content.filter(p => p !== null);\n    this.dataSource = new MatTableDataSource(this.products);\n  }\n\n  getDisplayTitleCategory(element: any, column: any) {\n    if (column === 'category') {\n      return element.category?.title;\n    }\n\n    return element[column];\n  }\n\n  goToEditProduct(restaurantId: string, productId: string) {\n    this.router.navigateByUrl(`/restaurants/${restaurantId}/products/${productId}/edit`);\n  }\n}\n","export default \"mat-card {\\n  max-width: 500px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n.add-restaurant-button {\\n  margin-left: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXN0YXVyYW50L2NyZWF0ZS1yZXN0YXVyYW50L2NyZWF0ZS1yZXN0YXVyYW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Jlc3RhdXJhbnQvY3JlYXRlLXJlc3RhdXJhbnQvY3JlYXRlLXJlc3RhdXJhbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmFkZC1yZXN0YXVyYW50LWJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuIl19 */\";","import {Component, OnInit} from '@angular/core';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {RestaurantService} from '../../../services/restaurant.service';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\nimport {AppSettings} from '../../../global/app.settings';\n\n@Component({\n  selector: 'app-create-restaurant',\n  templateUrl: './create-restaurant.component.html',\n  styleUrls: ['./create-restaurant.component.css']\n})\nexport class CreateRestaurantComponent implements OnInit {\n  private restaurant: RestaurantListModel = {};\n  form: FormGroup;\n  fileData: File = null;\n  selectedImage: string;\n  constructor(private restaurantService: RestaurantService,\n              private formBuilder: FormBuilder,\n              private toastrService: ToastrService,\n              private router: Router) {\n    this.form = formBuilder.group({\n        name: [],\n        location: [],\n        image: ['']\n    });\n  }\n\n  ngOnInit() {\n    this.restaurant.name = '';\n    this.restaurant.location = '';\n  }\n\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.selectedImage = event.target.files[0]?.name;\n      this.form.get('image').setValue(file);\n    }\n  }\n\n  addRestaurant() {\n    this.restaurant = {\n      name: this.name.value,\n      location: this.location.value\n    };\n\n    this.restaurantService.addRestaurant(this.restaurant)\n      .then(res => {\n        const formData = new FormData();\n        formData.append('file', this.form.get('image').value);\n        this.restaurantService.addImageToRestaurant(formData, res.body.id).then(response => {\n          if (response.status === 200) {\n            this.toastrService.success('Успешно добавен ресторант');\n            this.setEmptyValuesForFormGroup(this.form);\n          } else {\n            this.toastrService.warning('Възникна проблем при създаването на ресторанта');\n          }\n        });\n    }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  get name() {\n    return this.form.get('name');\n  }\n\n  get location() {\n    return this.form.get('location');\n  }\n\n  private setEmptyValuesForFormGroup(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach(control => {\n      control.setValue('');\n      control.setErrors(undefined);\n\n      if (control.controls) {\n        this.setEmptyValuesForFormGroup(control);\n      }\n    });\n  }\n}\n","export default \"mat-card {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n.edit-restaurant-button {\\n  margin-left: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXN0YXVyYW50L2VkaXQtcmVzdGF1cmFudC9lZGl0LXJlc3RhdXJhbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdGF1cmFudC9lZGl0LXJlc3RhdXJhbnQvZWRpdC1yZXN0YXVyYW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5lZGl0LXJlc3RhdXJhbnQtYnV0dG9uIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG4iXX0= */\";","import { RestaurantService } from '../../../services/restaurant.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { RestaurantListModel } from '../../../models/restaurant-list.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {AppSettings} from '../../../global/app.settings';\n\n@Component({\n  selector: 'app-edit-restaurant',\n  templateUrl: './edit-restaurant.component.html',\n  styleUrls: ['./edit-restaurant.component.css']\n})\nexport class EditRestaurantComponent implements OnInit {\n  form: FormGroup;\n  fileData: File = null;\n  restaurant: RestaurantListModel = {name: ''};\n  isSelectedNewImage: boolean;\n  selectedImage: string;\n  constructor(private formBuilder: FormBuilder,\n              private activeRoute: ActivatedRoute,\n              private restaurantService: RestaurantService,\n              private toastrService: ToastrService,\n              private router: Router) {\n    this.form = this.formBuilder.group({\n      name: [],\n      location: [],\n      image: [],\n      active: []\n    });\n  }\n\n  async ngOnInit() {\n    await this.fetchRestaurants();\n    this.form = this.formBuilder.group({\n      name: this.restaurant.name,\n      location: this.restaurant.location,\n      image: this.restaurant.image,\n      active: this.restaurant.active ? \"active\" : \"inactive\"\n    });\n  }\n\n  async editRestaurant(restaurantId: string) {\n    this.restaurant.name = this.form.get('name').value;\n    this.restaurant.location = this.form.get('location').value;\n    this.restaurant.active = this.form.get(\"active\").value === \"active\";\n    this.restaurantService.patchUpdateRestaurant(restaurantId, this.restaurant)\n      .then(response => {\n      if (response.status === 200 && this.isSelectedNewImage) {\n        const formData = new FormData();\n        formData.append('file', this.form.get('image').value);\n        this.restaurantService.addImageToRestaurant(formData, this.restaurant.id)\n          .then(() => {\n            this.router.navigateByUrl('/restaurants');\n            this.toastrService.success('Успешно редактирахте ресторанта');\n          });\n      } else {\n        this.router.navigateByUrl('/restaurants');\n        this.toastrService.success('Успешно редактирахте ресторанта');\n      }\n    }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      this.isSelectedNewImage = true;\n      const file = event.target.files[0];\n      this.selectedImage = event.target.files[0]?.name;\n      this.form.get('image').setValue(file);\n    }\n  }\n\n  private async fetchRestaurants(): Promise<void> {\n    const restaurantId = this.activeRoute.snapshot.paramMap.get('id');\n    this.restaurant = (await this.restaurantService.getById(restaurantId)).body;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: 'confirmation-dialog.html',\n})\nexport class ConfirmationDialogComponent {\n  message = 'Are you sure?';\n  confirmButtonText = 'Yes';\n  cancelButtonText = 'Cancel';\n  constructor(\n    @Inject(MAT_DIALOG_DATA) private data: any,\n    private dialogRef: MatDialogRef<ConfirmationDialogComponent>) {\n    if (data) {\n      this.message = data.message || this.message;\n      if (data.buttonText) {\n        this.confirmButtonText = data.buttonText.ok || this.confirmButtonText;\n        this.cancelButtonText = data.buttonText.cancel || this.cancelButtonText;\n      }\n    }\n  }\n\n  onConfirmClick(): void {\n    this.dialogRef.close(true);\n  }\n\n}\n","export default \"#search-box {\\n  margin-bottom: 30px;\\n  margin-top: 30px;\\n}\\n\\n#restaurant-cards {\\n  margin: 10px;\\n}\\n\\nmat-card {\\n  width: 28%;\\n  display: inline-block;\\n}\\n\\nmat-card-content {\\n  margin-top: 10px;\\n}\\n\\nmat-card-header img {\\n  text-align: center;\\n  margin: 0 auto;\\n}\\n\\n.right {\\n  position: absolute;\\n  right: 5px;\\n  top: 2px;\\n}\\n\\n.no-border {\\n  padding: 0;\\n  border: none;\\n  background: none;\\n}\\n\\n.loading-spinner {\\n  position: relative;\\n  left: 50%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXN0YXVyYW50L2xpc3QtcmVzdGF1cmFudHMvbGlzdC1yZXN0YXVyYW50cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0VBQ25CLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFVBQVU7RUFDVixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBR0E7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsUUFBUTtBQUNWOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsU0FBUztBQUNYIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZXN0YXVyYW50L2xpc3QtcmVzdGF1cmFudHMvbGlzdC1yZXN0YXVyYW50cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3NlYXJjaC1ib3gge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuXG4jcmVzdGF1cmFudC1jYXJkcyB7XG4gIG1hcmdpbjogMTBweDtcbn1cblxubWF0LWNhcmQge1xuICB3aWR0aDogMjglO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbm1hdC1jYXJkLWNvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG5cbm1hdC1jYXJkLWhlYWRlciBpbWcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ucmlnaHQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiA1cHg7XG4gIHRvcDogMnB4O1xufVxuXG4ubm8tYm9yZGVyIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuXG4ubG9hZGluZy1zcGlubmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1MCU7XG59XG4iXX0= */\";","import {RestaurantService} from '../../../services/restaurant.service';\nimport {Component, OnInit} from '@angular/core';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmationDialogComponent} from './confirmation-dialog.component';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {Router} from '@angular/router';\nimport {ThemePalette} from '@angular/material/core';\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-list-restaurants',\n  templateUrl: './list-restaurants.component.html',\n  styleUrls: ['./list-restaurants.component.css']\n})\nexport class ListRestaurantsComponent implements OnInit {\n  restaurants: RestaurantListModel[];\n  searchText = '';\n  user: SecurityObjectModel;\n  page = 0;\n  size = 6;\n  private totalElements: number;\n  color: ThemePalette = 'accent';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 30;\n\n  constructor(private restaurantService: RestaurantService,\n              private toastrService: ToastrService,\n              private dialog: MatDialog,\n              private authenticationService: AuthenticationService,\n              private router: Router) { }\n\n  async ngOnInit() {\n    await this.fetchRestaurants({pageIndex: this.page, pageSize: this.size});\n  }\n\n  // fetch all restaurants for ADMIN role and only owner's restaurant if the user is owner\n  private async fetchRestaurants(paginationObject): Promise<void> {\n    this.user = this.authenticationService.getSecurityObject();\n\n    if (this.user.authorities && this.user.authorities.includes('OWNER')) {\n      await this.requestRestaurants(paginationObject, this.user.username);\n    } else {\n      await this.requestRestaurants(paginationObject);\n    }\n\n    this.page = paginationObject.pageIndex;\n  }\n\n  private async requestRestaurants(obj, user?: string) {\n    const allRestaurantResponse = await this.restaurantService.getAll(user, this.searchText, obj.pageIndex, this.size);\n    this.totalElements = allRestaurantResponse.body.totalElements;\n    this.restaurants = allRestaurantResponse.body.content;\n  }\n\n  async deleteRestaurant(restaurant: RestaurantListModel) {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: {\n        message: `Сигурен ли си че искаш да изтриеш ресторант '${restaurant.name} ?'`,\n        buttonText: {\n          ok: 'Да',\n          cancel: 'Не'\n        }\n      }\n    });\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        const a = document.createElement('a');\n        a.click();\n        a.remove();\n        this.restaurantService.deleteRestaurant(restaurant.id).then(response => {\n          if (response.status === 200) {\n            this.toastrService.success('Успешно изтрихте ресторанта!');\n            this.fetchRestaurants({pageIndex: this.page, pageSize: this.size});\n          }\n        });\n      }\n    });\n  }\n\n  goToProducts(restaurantId: string) {\n    this.router.navigateByUrl(`/restaurants/${restaurantId}/edit`);\n  }\n\n  isAdmin(): boolean {\n    return this.user.authorities.includes('ADMIN');\n  }\n}\n\n","export default \"mat-card {\\n  max-width: 500px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyL2NyZWF0ZS11c2VyL2NyZWF0ZS11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3VzZXIvY3JlYXRlLXVzZXIvY3JlYXRlLXVzZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiJdfQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {UserCreateModel} from '../../../models/user-create.model';\nimport {UserService} from '../../../services/user.service';\nimport {RestaurantService} from '../../../services/restaurant.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\nimport {AppSettings} from '../../../global/app.settings';\nimport {AuthenticationService} from '../../../services/authentication.service';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n  restaurants: RestaurantListModel[];\n  form: FormGroup;\n  user: UserCreateModel = {};\n  selectedRestaurantId: string;\n  constructor(private formBuilder: FormBuilder,\n              private userService: UserService,\n              private restaurantService: RestaurantService,\n              private toastrService: ToastrService,\n              private router: Router,\n              private authenticationService: AuthenticationService) {\n    this.form = formBuilder.group({\n      username: [],\n      password: [],\n      restaurantId: [],\n      selectedRestaurantId: [],\n      roles: []\n    });\n  }\n\n  async ngOnInit() {\n    const user = this.authenticationService.getSecurityObject();\n    if (user.authorities.includes('OWNER')) {\n      this.restaurants = (await this.restaurantService.getAllNames(user.username));\n    } else {\n      this.restaurants = (await this.restaurantService.getAllNames());\n    }\n\n    this.user.password = '';\n    this.user.restaurantId = '';\n    this.user.username = '';\n    this.selectedRestaurantId = '';\n  }\n\n  addUser() {\n    const user: UserCreateModel = {\n      username: this.form.get('username').value,\n      password: this.form.get('password').value,\n      restaurantId: this.form.get('restaurantId').value\n    };\n    this.userService.addUser(user, this.form.get('roles').value)\n      .then(res => {\n        if (res.status === 200) {\n          this.toastrService.success('Успешно създадохте потребителя');\n          this.setEmptyValuesForFormGroup(this.form);\n        }\n      }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  isAdmin(): boolean {\n    return this.authenticationService.getSecurityObject().authorities.includes('ADMIN');\n  }\n\n  private setEmptyValuesForFormGroup(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach(control => {\n      control.setValue('');\n      control.setErrors(undefined);\n\n      if (control.controls) {\n        this.setEmptyValuesForFormGroup(control);\n      }\n    });\n  }\n}\n","export default \"mat-card {\\n  padding: 10px;\\n  margin: 10px;\\n  width: 25%;\\n  display: inline-block;\\n}\\n\\nmat-card-content {\\n  margin-top: 10px;\\n}\\n\\n.mat-card-header .mat-card-title {\\n  font-size: 13px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyL2xpc3QtdXNlcnMvbGlzdC11c2Vycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWixVQUFVO0VBQ1YscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9saXN0LXVzZXJzL2xpc3QtdXNlcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcbiAgcGFkZGluZzogMTBweDtcbiAgbWFyZ2luOiAxMHB4O1xuICB3aWR0aDogMjUlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbm1hdC1jYXJkLWNvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ubWF0LWNhcmQtaGVhZGVyIC5tYXQtY2FyZC10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cbiJdfQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../../services/user.service';\nimport {AppSettings} from '../../../global/app.settings';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmationDialogComponent} from '../../restaurant/list-restaurants/confirmation-dialog.component';\nimport {UserListWithRestaurantDetailsModel} from '../../../models/user-list-with-restaurant-details.model';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {RestaurantService} from '../../../services/restaurant.service';\n\n@Component({\n  selector: 'app-list-users',\n  templateUrl: './list-users.component.html',\n  styleUrls: ['./list-users.component.css']\n})\nexport class ListUsersComponent implements OnInit {\n  users: UserListWithRestaurantDetailsModel[];\n  restaurants: RestaurantListModel[];\n  user: SecurityObjectModel;\n  text = '';\n  constructor(private userService: UserService,\n              private toastrService: ToastrService,\n              private router: Router,\n              private dialog: MatDialog,\n              private authenticationService: AuthenticationService,\n              private restaurantService: RestaurantService) { }\n\n  async ngOnInit() {\n    this.fetchAllUsers();\n  }\n\n  private async fetchAllUsers() {\n    this.users = await this.userService.getAllUsers();\n    this.user = this.authenticationService.getSecurityObject();\n    if (this.user.authorities && this.user.authorities.includes('OWNER')) {\n      this.restaurants = (await this.restaurantService.getAll(this.user.username, '', 0, 100000)).body.content;\n    } else {\n      this.restaurants = (await this.restaurantService.getAll(undefined, '', 0, 100000)).body.content;\n    }\n  }\n\n  deleteUser(user: UserListWithRestaurantDetailsModel) {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: {\n        message: `Сигурен ли си че искаш да изтриеш потребител '${user.username} ?'`,\n        buttonText: {\n          ok: 'Да',\n          cancel: 'Не'\n        }\n      }\n    });\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        const a = document.createElement('a');\n        a.click();\n        a.remove();\n        this.userService.deleteUser(user.id)\n          .then(res => {\n            if (res.status === 200) {\n              this.fetchAllUsers();\n              this.toastrService.success('Успешно изтрихте потребителя');\n            }\n          }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n      }\n    });\n  }\n\n  getRepresentationTextForRoles(roles: string[]): string[] {\n    return AppSettings.getRepresentationTextForRoles(roles);\n  }\n}\n","import {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\n\nexport class AppSettings {\n  public static API_ENDPOINT = 'http://localhost:8080'; // 'https://tequila-s-laimche-brat.herokuapp.com  / 8080\n  static redirectAndRequireToLogin(errStatus, toastrService: ToastrService, router: Router) {\n    if (errStatus === 403) {\n      toastrService.warning('Please login..', 'Expired token');\n      router.navigateByUrl('/login');\n    }\n  }\n\n  static getRepresentationTextForRoles(roles: string[]): string[] {\n    const representationRoles = [];\n\n    roles.forEach(role => {\n      if (role.includes('ADMIN')) {\n        representationRoles.push('Администратор');\n      }\n\n      if (role.includes('OWNER')) {\n        representationRoles.push('Собственик');\n      }\n\n      if (role.includes('WAITER')) {\n        representationRoles.push('Сервитьор');\n      }\n    });\n\n    return representationRoles;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {ProductModel} from '../models/product-list.model';\n\n@Pipe({\n  name: 'filterProducts'\n})\nexport class ProductListFilterPipe implements PipeTransform {\n  transform(items: ProductModel[], searchText: string): ProductModel[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLocaleLowerCase();\n\n    return items.filter(it => {\n      return it.title.toLocaleLowerCase().includes(searchText) || it.category.title.toLocaleLowerCase().includes(searchText);\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {RestaurantListModel} from '../models/restaurant-list.model';\nimport {UserListModel} from '../models/user-list.model';\nimport {UserListWithRestaurantDetailsModel} from '../models/user-list-with-restaurant-details.model';\n\n@Pipe({\n  name: 'filterUsers'\n})\nexport class UserListFilterPipe implements PipeTransform {\n  transform(items: UserListWithRestaurantDetailsModel[], searchText: string): UserListWithRestaurantDetailsModel[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLocaleLowerCase();\n\n    return items.filter(it => {\n      return it.username.toLocaleLowerCase().includes(searchText);\n    });\n  }\n}\n","import {EditProductComponent} from './components/product/edit-product/edit-product.component';\nimport {EditRestaurantComponent} from './components/restaurant/edit-restaurant/edit-restaurant.component';\nimport {CreateProductComponent} from './components/product/create-product/create-product.component';\nimport {ProductListComponent} from './components/product/product-list/product-list.component';\nimport {CreateRestaurantComponent} from './components/restaurant/create-restaurant/create-restaurant.component';\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ListRestaurantsComponent} from './components/restaurant/list-restaurants/list-restaurants.component';\nimport {LoginComponent} from './components/common/login/login.component';\nimport {AuthGuard} from './security/auth.guard';\nimport { ImportProductsComponent } from './components/product/import-products/import-products.component';\nimport {ListUsersComponent} from './components/user/list-users/list-users.component';\nimport {CreateUserComponent} from './components/user/create-user/create-user.component';\nimport {MyProfileComponent} from './components/account/my-profile/my-profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'restaurants/create',\n    component: CreateRestaurantComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN'}\n  },\n  {\n    path: 'restaurants',\n    component: ListRestaurantsComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'restaurants/:id/edit',\n    component: EditRestaurantComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'restaurants/:id/products',\n    component: ProductListComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'restaurants/:id/products/:productId/edit',\n    component: EditProductComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'product',\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'},\n    children: [\n      { path: ':id/edit', component: EditProductComponent},\n    ]\n  },\n  {\n    path: 'products/create',\n    canActivate: [AuthGuard],\n    component: CreateProductComponent,\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'users/all',\n    canActivate: [AuthGuard],\n    component: ListUsersComponent,\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'users/create',\n    canActivate: [AuthGuard],\n    component: CreateUserComponent,\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'my-profile',\n    canActivate: [AuthGuard],\n    component: MyProfileComponent,\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'import',\n    component: ImportProductsComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN'}\n  },\n  { path: '**', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class RoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {ToastrService} from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authenticationService: AuthenticationService,\n              private router: Router,\n              private toastrService: ToastrService) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const role = next.data.authorities;\n    const user = this.authenticationService.getSecurityObject();\n    if (user && user.authenticated && role.includes(user.authorities)) {\n      return true;\n    } else {\n      this.toastrService.warning('You are not authorized to access that resource!');\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor() {\n  }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const user = JSON.parse(window.localStorage.getItem('user'));\n    if (user && user.jwt) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${user.jwt}`\n        }\n      });\n    }\n    return next.handle(req);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {UserAuthenticationModel} from '../models/user-authentication.model';\nimport {AppSettings} from '../global/app.settings';\nimport {SecurityObjectModel} from '../models/security-object.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  constructor(private httpClient: HttpClient,\n              private toastrService: ToastrService,\n              private router: Router) {\n  }\n\n  login(user: UserAuthenticationModel): Promise<HttpResponse<object>> {\n    return this.httpClient.post(`${AppSettings.API_ENDPOINT}/authenticate`, user, {observe: 'response'}).toPromise();\n  }\n\n  getSecurityObject(): SecurityObjectModel {\n    return JSON.parse(window.localStorage.getItem('user'));\n  }\n\n  setSecurityObject(obj: SecurityObjectModel) {\n    window.localStorage.setItem('user', JSON.stringify(obj as SecurityObjectModel));\n  }\n\n  logout() {\n    window.localStorage.removeItem('user');\n    this.toastrService.success('Success logout!');\n    this.router.navigateByUrl('/login');\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {AppSettings} from '../global/app.settings';\nimport {CategoryModel} from '../models/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getAllCategoriesByRestaurantId(restaurantId: string): Promise<CategoryModel[]> {\n    // tslint:disable-next-line:max-line-length\n    return this.httpClient.get<CategoryModel[]>(`${AppSettings.API_ENDPOINT}/api/category?restaurantId=${restaurantId}`).toPromise();\n  }\n\n  addCategory(restaurantId: string, category: CategoryModel): Promise<CategoryModel> {\n    // tslint:disable-next-line:max-line-length\n    return this.httpClient.post<CategoryModel>(`${AppSettings.API_ENDPOINT}/api/category/create?restaurantId=${restaurantId}`, category).toPromise();\n  }\n}\n","import {ProductModel} from '../models/product-list.model';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {AppSettings} from '../global/app.settings';\nimport {ListResponse} from './restaurant.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  constructor(private httpClient: HttpClient) { }\n\n  addImageToProduct(productId: string, formData: FormData) {\n    return this.httpClient.post(`${AppSettings.API_ENDPOINT}/api/product/${productId}/upload-image`,\n      formData,\n      {observe: 'response'})\n      .toPromise();\n  }\n\n  editProduct(productId: string, product: ProductModel): Promise<HttpResponse<object>> {\n    return this.httpClient.put(`${AppSettings.API_ENDPOINT}/api/product/${productId}`, product, {observe: 'response'}).toPromise();\n  }\n\n  getById(productId: string): Promise<HttpResponse<ProductModel>> {\n    return this.httpClient.get<ProductModel>(`${AppSettings.API_ENDPOINT}/api/product/${productId}`, {observe: 'response'}).toPromise();\n  }\n\n  deleteProduct(productId: string): Promise<HttpResponse<object>> {\n    return this.httpClient.delete(`${AppSettings.API_ENDPOINT}/api/product/${productId}`, {observe: 'response'}).toPromise();\n  }\n\n  getAllByRestaurantId(id: string): Promise<HttpResponse<ListResponse<ProductModel>>> {\n    // tslint:disable-next-line:max-line-length\n    return this.httpClient.get<ListResponse<ProductModel>>(`${AppSettings.API_ENDPOINT}/api/product/all?page=0&size=100000&restaurantId=${id}`, {observe: 'response'}).toPromise();\n  }\n\n  importProducts(restaurantId: string, formData: FormData): Promise<HttpResponse<number>> {\n    return this.httpClient.post<number>(\n      `${AppSettings.API_ENDPOINT}/api/product/${restaurantId}/import-products`,\n      formData,\n      {observe: \"response\"}).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { RestaurantListModel } from '../models/restaurant-list.model';\nimport {AppSettings} from '../global/app.settings';\nimport {ProductModel} from '../models/product-list.model';\nimport {RestaurantUpdateModel} from '../models/restaurant-update.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAll(ownerUsername?: string, search?: string, page?: number, size?: number): Promise<HttpResponse<ListResponse<RestaurantListModel>>> {\n    return this.httpClient\n      // tslint:disable-next-line:max-line-length\n      .get<ListResponse<RestaurantListModel>>(`${AppSettings.API_ENDPOINT}/api/restaurant/all?page=${page}&size=${size}&searchTerm=${search}${ownerUsername ? '&ownerUsername=' + ownerUsername : ''}`,\n      {observe: 'response'})\n      .toPromise();\n  }\n\n  getAllNames(ownerUsername?: string): Promise<RestaurantListModel[]> {\n    return this.httpClient\n      // tslint:disable-next-line:max-line-length\n      .get<RestaurantListModel[]>(`${AppSettings.API_ENDPOINT}/api/restaurant/names${ownerUsername ? '?ownerUsername=' + ownerUsername : ''}`)\n      .toPromise();\n  }\n\n  getById(id: string): Promise<HttpResponse<RestaurantListModel>> {\n    return this.httpClient.get<RestaurantListModel>(`${AppSettings.API_ENDPOINT}/api/restaurant/${id}`, {observe: 'response'}).toPromise();\n  }\n\n  addProduct(id: string, product: ProductModel): Promise<HttpResponse<ProductModel>> {\n    return this.httpClient.post<ProductModel>(`${AppSettings.API_ENDPOINT}/api/restaurant/${id}/add-product`,\n      product,\n      {observe: 'response'}).toPromise();\n  }\n\n  patchUpdateRestaurant(restaurantId: string, restaurant: RestaurantUpdateModel) {\n    return this.httpClient.patch<RestaurantUpdateModel>(`${AppSettings.API_ENDPOINT}/api/restaurant/${restaurantId}`,\n      restaurant,\n      {observe: 'response'})\n      .toPromise();\n  }\n\n   addRestaurant(restaurant: RestaurantListModel): Promise<HttpResponse<RestaurantListModel>> {\n     return this.httpClient.post<RestaurantListModel>(`${AppSettings.API_ENDPOINT}/api/restaurant/create`,\n       restaurant,\n       {observe: 'response'})\n       .toPromise();\n   }\n\n   addImageToRestaurant(formData, restaurantId) {\n     return this.httpClient.post(`${AppSettings.API_ENDPOINT}/api/restaurant/${restaurantId}/upload-image`,\n       formData,\n       {observe: 'response'})\n       .toPromise();\n   }\n\n   deleteRestaurant(id: string): Promise<HttpResponse<object>> {\n    return this.httpClient.delete(`${AppSettings.API_ENDPOINT}/api/restaurant/${id}`, {observe: 'response'}).toPromise();\n   }\n}\n\nexport class ListResponse<T> {\n  content: T[];\n  totalElements: number;\n}\n","import {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {AppSettings} from '../global/app.settings';\nimport {UserCreateModel} from '../models/user-create.model';\nimport {SecurityObjectModel} from '../models/security-object.model';\nimport {UserListWithRestaurantDetailsModel} from '../models/user-list-with-restaurant-details.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private httpClient: HttpClient) { }\n\n  getAllUsers(): Promise<UserListWithRestaurantDetailsModel[]> {\n    return this.httpClient.get<UserListWithRestaurantDetailsModel[]>(`${AppSettings.API_ENDPOINT}/api/all-users`).toPromise();\n  }\n\n  deleteUser(userId: string): Promise<HttpResponse<object>> {\n    return this.httpClient.delete(`${AppSettings.API_ENDPOINT}/api/delete-user/${userId}`, {observe: 'response'}).toPromise();\n  }\n\n  addUser(user: UserCreateModel, roles: []): Promise<HttpResponse<SecurityObjectModel>> {\n    return this.httpClient.post<SecurityObjectModel>(`${AppSettings.API_ENDPOINT}/api/add-user${roles && '?roles=' + roles.join()}`,\n      user,\n      {observe: 'response'})\n      .toPromise();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}