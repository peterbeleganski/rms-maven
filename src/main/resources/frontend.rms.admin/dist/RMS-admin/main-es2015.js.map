{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/account/my-profile/my-profile.component.html","./src/app/components/common/home/home.component.html","./src/app/components/common/login/login.component.html","./src/app/components/common/navigation/navigation.component.html","./src/app/components/product/create-product/create-new-category.dialog.html","./src/app/components/product/create-product/create-product.component.html","./src/app/components/product/edit-product/edit-product.component.html","./src/app/components/product/import-products/import-products.component.html","./src/app/components/product/product-list/product-list.component.html","./src/app/components/restaurant/create-restaurant/create-restaurant.component.html","./src/app/components/restaurant/edit-restaurant/edit-restaurant.component.html","./src/app/components/restaurant/list-restaurants/confirmation-dialog.html","./src/app/components/restaurant/list-restaurants/list-restaurants.component.html","./src/app/components/user/create-user/create-user.component.html","./src/app/components/user/list-users/list-users.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/account/my-profile/my-profile.component.css","./src/app/components/account/my-profile/my-profile.component.ts","./src/app/components/common/home/home.component.css","./src/app/components/common/home/home.component.ts","./src/app/components/common/login/login.component.css","./src/app/components/common/login/login.component.ts","./src/app/components/common/navigation/navigation.component.css","./src/app/components/common/navigation/navigation.component.ts","./src/app/components/product/create-product/create-new-category.dialog.ts","./src/app/components/product/create-product/create-product.component.css","./src/app/components/product/create-product/create-product.component.ts","./src/app/components/product/edit-product/edit-product.component.css","./src/app/components/product/edit-product/edit-product.component.ts","./src/app/components/product/import-products/import-products.component.css","./src/app/components/product/import-products/import-products.component.ts","./src/app/components/product/product-list/product-list.component.css","./src/app/components/product/product-list/product-list.component.ts","./src/app/components/restaurant/create-restaurant/create-restaurant.component.css","./src/app/components/restaurant/create-restaurant/create-restaurant.component.ts","./src/app/components/restaurant/edit-restaurant/edit-restaurant.component.css","./src/app/components/restaurant/edit-restaurant/edit-restaurant.component.ts","./src/app/components/restaurant/list-restaurants/confirmation-dialog.component.ts","./src/app/components/restaurant/list-restaurants/list-restaurants.component.css","./src/app/components/restaurant/list-restaurants/list-restaurants.component.ts","./src/app/components/user/create-user/create-user.component.css","./src/app/components/user/create-user/create-user.component.ts","./src/app/components/user/list-users/list-users.component.css","./src/app/components/user/list-users/list-users.component.ts","./src/app/global/app.settings.ts","./src/app/modules/material/material-module.ts","./src/app/pipes/product-list-filter.pipe.ts","./src/app/pipes/user-list-filter.pipe.ts","./src/app/routing.module.ts","./src/app/security/auth.guard.ts","./src/app/security/token.interceptor.ts","./src/app/services/authentication.service.ts","./src/app/services/category.service.ts","./src/app/services/product.service.ts","./src/app/services/restaurant.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!-- HEADER -->\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row style=\\\"color: white\\\">\\n      <button mat-icon-button (click)=\\\"toggle()\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <span style=\\\"color: white\\\">QrMenu</span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n<!-- END HEADER -->\\n<mat-drawer-container>\\n  <mat-drawer mode=\\\"side\\\" [opened]=\\\"sideBarOpened\\\">\\n    <app-navigation></app-navigation>\\n  </mat-drawer>\\n\\n  <mat-drawer-content>\\n    <router-outlet></router-outlet>\\n  </mat-drawer-content>\\n</mat-drawer-container>\\n\";","export default \"<p>my-profile works!</p>\\n\";","export default \"<div class=\\\"jumbotron\\\">\\n  <h3>Welcome to FrogZone Admin</h3>\\n  <h4>Current number of restaurants: {{restaurantsCount}}</h4>\\n  <h4>Current number of menus: {{menusCount}}</h4>\\n  <h4>Current number of products: {{productsCount}}</h4>\\n</div>\\n\";","export default \"<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login()\\\">\\n      <h2>Вход</h2>\\n      <img mat-card-sm-image src=\\\"../../assets/images/logo.png\\\" alt=\\\"\\\">\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Потребителско име/Имейл\\\" formControlName=\\\"username\\\" required>\\n        <mat-error>\\n          Моля въведете правилен Имейл адрес\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Парола\\\" formControlName=\\\"password\\\" required>\\n        <mat-error>\\n         Моля въведете парола\\n        </mat-error>\\n      </mat-form-field>\\n      <button mat-raised-button color=\\\"primary\\\">\\n        <span style=\\\"color: white\\\">Вход</span>\\n      </button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<mat-nav-list *ngIf=\\\"getSecurityObject()\\\">\\n  <div class=\\\"profile-card\\\" *ngIf=\\\"getSecurityObject() && getSecurityObject().authenticated\\\">\\n    <div class=\\\"header\\\">\\n      <h2>{{getSecurityObject().username}}</h2>\\n      <h4>Роля: {{ getRepresentationTextForRoles(getSecurityObject().authorities) }}</h4>\\n    </div>\\n    <img src=\\\"https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png\\\" alt=\\\"profile-icon\\\">\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n\\n  <h2 matSubheader>Операции</h2>\\n\\n  <div *ngIf=\\\"!getSecurityObject()\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/login\\\"> <mat-icon>lock</mat-icon>Вход</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n      <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/restaurants\\\">\\n        <mat-icon>list</mat-icon>\\n        {{isAuthenticatedForRole('OWNER') ? 'Моите ресторанти' : 'Ресторанти'}}\\n      </a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/restaurants/create\\\">\\n      <mat-icon>restaurant</mat-icon> Добави ресторант</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/products/create\\\">\\n      <mat-icon>fastfood</mat-icon>Добави продукт</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/import\\\">\\n      <mat-icon>upload</mat-icon>Импортиране на продукти\\n    </a>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n\\n  <h2 matSubheader>Потребители</h2>\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/users/create\\\">\\n      <mat-icon>group_add</mat-icon>Добави потребител</a>\\n  </div>\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/users/all\\\">\\n      <mat-icon>supervisor_account</mat-icon>Всички потребители</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" routerLink=\\\"/my-profile\\\">\\n      <mat-icon>edit</mat-icon>Редактирай профила си</a>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" (click)=\\\"logout()\\\">\\n      <mat-icon>settings</mat-icon>Настройки</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isAuthenticatedForRole('ADMIN,OWNER')\\\">\\n    <a mat-list-item routerLinkActive=\\\"list-item-active\\\" (click)=\\\"logout()\\\">\\n      <mat-icon>logout</mat-icon>Изход</a>\\n  </div>\\n</mat-nav-list>\\n\";","export default \"<h2>Добави категория</h2>\\n<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\">\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Име на категорията\\\" formControlName=\\\"title\\\" required>\\n        <mat-error>\\n          Моля въведете име на категорията\\n        </mat-error>\\n      </mat-form-field>\\n      <br>\\n      <button mat-raised-button mat-dialog-close color=\\\"primary\\\" class=\\\"add-restaurant-button text-white\\\" (click)=\\\"addCategory(data)\\\"> <mat-icon>add</mat-icon> Добави</button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\\n\";","export default \"<br>\\n<div *ngIf=\\\"selectedRestaurantId\\\">\\n  <a routerLink=\\\"/restaurants/{{selectedRestaurantId}}/products\\\">Вижте продуктите на ресторанта</a>\\n</div>\\n<h2 class=\\\"text-center\\\">Добави продукт</h2>\\n<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-label>Изберете ресторант</mat-label>\\n        <mat-select formControlName=\\\"selectedRestaurant\\\" (selectionChange)=\\\"onSelectRestaurant()\\\">\\n          <mat-option *ngFor=\\\"let restaurant of restaurants\\\" [value]=\\\"restaurant.id\\\">\\n            {{restaurant.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Изберете меню</mat-label>\\n        <mat-select formControlName=\\\"selectedMenu\\\" multiple>\\n          <mat-option *ngFor=\\\"let menu of menus\\\" [value]=\\\"menu\\\">\\n            {{menu}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Въведете име на продукт\\\" formControlName=\\\"title\\\" required>\\n        <mat-error>\\n          Моля въведете име на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input type=\\\"number\\\" matInput placeholder=\\\"Въведете цена на продукт\\\" formControlName=\\\"price\\\" required>\\n        <mat-error>\\n          Моля въведете цена на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <textarea matInput placeholder=\\\"Въведете описание на продукт\\\" formControlName=\\\"description\\\" required> </textarea>\\n        <mat-error>\\n          Моля въведете описание на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Въведете алергени за продукт пример: (яйца,мляко,подправки)\\\" formControlName=\\\"allergens\\\" required>\\n        <mat-error>\\n          Моля въведете алергени на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Въведете тагове за продукт\\\" formControlName=\\\"tags\\\" required>\\n        <mat-error>\\n          Моля въведете тагове на продукта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-10\\\">\\n            <mat-label>Изберете категория</mat-label>\\n            <mat-select formControlName=\\\"category\\\">\\n              <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category\\\">\\n                {{category.title}}\\n              </mat-option>\\n            </mat-select>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNewCategory(selectedRestaurantId, $event)\\\">\\n              <mat-icon>add</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </mat-form-field>\\n      <h3>Избери картинка</h3>\\n      <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInput.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n      <span *ngIf=\\\"selectedImage\\\" class=\\\"mat-active\\\">\\n        Избран файл: {{selectedImage}}\\n      </span>\\n      <input hidden (change)=\\\"onFileSelect($event)\\\" #fileInput type=\\\"file\\\" id=\\\"file\\\">\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"add-product-button text-white\\\" (click)=\\\"addProduct()\\\"> <mat-icon>add</mat-icon> Добави</button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\\n\";","export default \"<h2 class=\\\"text-center\\\">Редактирай продукт</h2>\\n<div class=\\\"loading-spinner\\\" *ngIf=\\\"!fetchedProduct\\\">\\n  <div>\\n    <mat-progress-spinner\\n      class=\\\"example-margin\\\"\\n      [color]=\\\"color\\\"\\n      [mode]=\\\"mode\\\"\\n      [value]=\\\"value\\\">\\n    </mat-progress-spinner>\\n  </div>\\n</div>\\n<mat-card *ngIf=\\\"product\\\">\\n  <mat-card-content>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-5\\\">\\n        <img mat-card-xl-image src=\\\"{{product.imageUrl}}\\\" alt=\\\"\\\">\\n      </div>\\n      <div class=\\\"col-md-7\\\">\\n        <form [formGroup]=\\\"form\\\">\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"title\\\">Име на продукта</label>\\n            <input matInput formControlName=\\\"title\\\" required id=\\\"title\\\">\\n            <mat-error>\\n              Моля въведете име на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"price\\\">Цена</label>\\n            <input type=\\\"number\\\" matInput formControlName=\\\"price\\\" id=\\\"price\\\" required>\\n            <mat-error>\\n              Моля въведете цена на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"description\\\">Описание</label>\\n            <textarea matInput formControlName=\\\"description\\\" required id=\\\"description\\\"> </textarea>\\n            <mat-error>\\n              Моля въведете описание на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"allergens\\\">Алергени</label>\\n            <input matInput formControlName=\\\"allergens\\\" id=\\\"allergens\\\" required>\\n            <mat-error>\\n              Моля въведете алергени на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <label for=\\\"tags\\\">Тагове</label>\\n            <input matInput formControlName=\\\"tags\\\" id=\\\"tags\\\" required>\\n            <mat-error>\\n              Моля въведете тагове на продукта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-10\\\">\\n                <mat-label>Изберете категория</mat-label>\\n                <mat-select formControlName=\\\"category\\\">\\n                  <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category\\\">\\n                    {{category.title}}\\n                  </mat-option>\\n                </mat-select>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNewCategory(restaurantId, $event)\\\">\\n                  <mat-icon>add</mat-icon>\\n                </button>\\n              </div>\\n            </div>\\n          </mat-form-field>\\n          <h3>Избери картинка</h3>\\n          <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInput.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n          <span *ngIf=\\\"selectedImage\\\" class=\\\"mat-active\\\">\\n        Избран файл: {{selectedImage}}\\n      </span>\\n          <input hidden (change)=\\\"onFileSelect($event)\\\" #fileInput type=\\\"file\\\" id=\\\"file\\\">\\n          <button mat-raised-button color=\\\"primary\\\" class=\\\"edit-product-button\\\" (click)=\\\"editProduct()\\\"> <mat-icon>create</mat-icon> Редактирай</button>\\n        </form>\\n      </div>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<mat-card>\\n  <div class=\\\"text-center\\\">Импортиране на продукти</div>\\n\\n  <mat-card-content>\\n    <form [formGroup]=\\\"importProductsForm\\\" #form=\\\"ngForm\\\">\\n      <mat-form-field>\\n        <mat-label>Изберете ресторант</mat-label>\\n        <mat-select formControlName=\\\"restaurantId\\\">\\n          <mat-option>-----</mat-option>\\n          <mat-option *ngFor=\\\"let restaurant of restaurants\\\" [value]=\\\"restaurant.id\\\">\\n            {{restaurant.name}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>Липсващ ресторант</mat-error>\\n      </mat-form-field>\\n\\n      <span>Файл: {{importFile?.name}}</span>\\n\\n      <div>\\n        <button mat-raised-button [disabled]=\\\"restaurantId.invalid || !importFile\\\" (click)=\\\"importProducts()\\\">Импортиране на продукти</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"importDialog.click()\\\" class=\\\"text-white\\\">\\n          <mat-icon>attachment</mat-icon>\\n          Изберете файл\\n        </button>\\n        <input #importDialog\\n               formControlName=\\\"importFilename\\\"\\n               type=\\\"file\\\"\\n               accept=\\\".csv\\\"\\n               (change)=\\\"onImportFileChosen($event)\\\"\\n               hidden/>\\n      </div>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<br>\\n<div class=\\\"text-center border-bottom\\\">\\n  <h2>Продукти от ресторант: <u>{{restaurant?.name}}</u></h2>\\n</div>\\n<mat-form-field>\\n  <mat-label>Търсете продукт</mat-label>\\n  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Търсете продукт\\\">\\n</mat-form-field>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"products && products.length === 0\\\">\\n  Все още няма продукти за този ресторант\\n</div>\\n<div class=\\\"loading-spinner\\\" *ngIf=\\\"!products\\\">\\n  <div>\\n    <mat-progress-spinner\\n      class=\\\"example-margin\\\"\\n      [color]=\\\"color\\\"\\n      [mode]=\\\"mode\\\"\\n      [value]=\\\"value\\\">\\n    </mat-progress-spinner>\\n  </div>\\n</div>\\n<table *ngIf=\\\"products\\\" mat-table\\n       [dataSource]=\\\"dataSource\\\" multiTemplateDataRows\\n       class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of columnsToDisplay\\\">\\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <span *ngIf=\\\"column === 'edit'\\\">\\n        <button mat-icon-button (click)=\\\"goToEditProduct(restaurant.id, element.id)\\\">\\n          <mat-icon color=\\\"primary\\\">edit</mat-icon>\\n        </button>\\n      </span>\\n      <span *ngIf=\\\"column === 'delete'\\\">\\n        <button mat-icon-button (click)=\\\"deleteProduct(element)\\\">\\n          <mat-icon color=\\\"warn\\\">delete</mat-icon>\\n        </button>\\n      </span>\\n      <span *ngIf=\\\"column !== 'edit' && column !== 'delete'\\\">\\n         {{ getDisplayTitleCategory(element, column)}}\\n      </span>\\n    </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\n    <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10\\\">\\n          <div class=\\\"example-element-detail\\\"\\n               [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n            <div class=\\\"example-element-diagram\\\">\\n              <div class=\\\"example-element-symbol\\\"> <img mat-card-sm-image class=\\\"image-sm\\\" src=\\\"{{element.imageUrl}}\\\" alt=\\\"Restaurant photo\\\"></div>\\n            </div>\\n            <div class=\\\"example-element-description\\\">\\n              <span class=\\\"example-element-description-attribution\\\">Описание на продукта:</span>\\n              {{element.description}}\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\"\\n      class=\\\"example-element-row\\\"\\n      [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n      (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n  </tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n</table>\\n\";","export default \"<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\">\\n      <h2>Добави ресторант</h2>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Име на ресторант\\\" formControlName=\\\"name\\\" required>\\n        <mat-error>\\n          Моля въведете име на ресторанта\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput placeholder=\\\"Локация на ресторанта\\\" formControlName=\\\"location\\\" required>\\n        <mat-error>\\n          Моля въведете локация на ресторанта\\n        </mat-error>\\n      </mat-form-field>\\n      <h3>Избери картинка за корицата</h3>\\n      <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInputCover.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n      <span *ngIf=\\\"selectedCoverImage\\\" class=\\\"mat-active\\\">\\n        Избран файл: {{selectedCoverImage}}\\n      </span>\\n      <input hidden (change)=\\\"onFileSelect($event, 'coverImage')\\\" #fileInputCover type=\\\"file\\\" id=\\\"file\\\">\\n      <h3>Избери лого на ресторанта</h3>\\n      <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInputLogo.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n      <span *ngIf=\\\"selectedLogoImage\\\" class=\\\"mat-active\\\">\\n        Избран файл: {{selectedLogoImage}}\\n      </span>\\n      <input hidden (change)=\\\"onFileSelect($event, 'logoImage')\\\" #fileInputLogo type=\\\"file\\\" id=\\\"file2\\\">\\n      <br>\\n      <br>\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"add-restaurant-button text-white\\\" (click)=\\\"addRestaurant()\\\">\\n        <mat-icon>add</mat-icon> <span>Добави</span>\\n      </button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<h2 class=\\\"text-center\\\">Редактирате ресторант: {{restaurant.name}}</h2>\\n<mat-card>\\n  <mat-card-content>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <h2>Корица на ресторанта</h2>\\n        <img mat-card-xl-image src=\\\"{{restaurant.coverImageUrl}}\\\" alt=\\\"cover image\\\">\\n\\n        <h2>Лого на ресторанта</h2>\\n        <img mat-card-xl-image src=\\\"{{restaurant.logoImageUrl}}\\\" alt=\\\"logo image\\\">\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <form [formGroup]=\\\"form\\\">\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <input matInput placeholder=\\\"Име на ресторант\\\" formControlName=\\\"name\\\" required>\\n            <mat-error>\\n              Моля въведете име на ресторанта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width-input\\\">\\n            <input matInput placeholder=\\\"Локация на ресторанта\\\" formControlName=\\\"location\\\" required>\\n            <mat-error>\\n              Моля въведете локация на ресторанта\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <mat-label>Статус на ресторант</mat-label>\\n            <mat-select id=\\\"restaurant-status\\\" formControlName=\\\"active\\\">\\n              <mat-option value=\\\"inactive\\\">неактивен</mat-option>\\n              <mat-option value=\\\"active\\\">активен</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <h3>Избери корица на ресторанта</h3>\\n                <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInputCoverImage.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n              <br>\\n              <span *ngIf=\\\"selectedCoverImage\\\" class=\\\"mat-active\\\">\\n                  Избран файл: {{selectedCoverImage}}\\n                </span>\\n                <input hidden (change)=\\\"onFileSelect($event, 'coverImage')\\\" #fileInputCoverImage type=\\\"file\\\" id=\\\"file-cover\\\">\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <h3>Избери лого на ресторанта</h3>\\n              <button type=\\\"button\\\" mat-raised-button (click)=\\\"fileInputLogoImage.click()\\\"> <mat-icon>attachment</mat-icon> Качи файл</button>\\n              <br>\\n              <span *ngIf=\\\"selectedLogoImage\\\" class=\\\"mat-active\\\">\\n                Избран файл: {{selectedLogoImage}}\\n              </span>\\n              <input hidden (change)=\\\"onFileSelect($event, 'logoImage')\\\" #fileInputLogoImage type=\\\"file\\\" id=\\\"file-logo\\\">\\n            </div>\\n          </div>\\n          <br>\\n          <div class=\\\"row\\\"></div>\\n          <button mat-raised-button color=\\\"primary\\\" class=\\\"edit-restaurant-button text-white\\\" (click)=\\\"editRestaurant(restaurant.id)\\\"> <mat-icon>save</mat-icon> Запази</button>\\n        </form>\\n      </div>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<mat-dialog-content>\\n  <p>\\n    {{message}}\\n  </p>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"center\\\">\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onConfirmClick()\\\" tabindex=\\\"1\\\">{{confirmButtonText}}</button>\\n  <button mat-raised-button mat-dialog-close tabindex=\\\"-1\\\">{{cancelButtonText}}</button>\\n</mat-dialog-actions>\\n\";","export default \"<div class=\\\"text-center\\\">\\n  <h2>Всички ресторанти</h2>\\n</div>\\n<mat-divider></mat-divider>\\n<input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Търси ресторант\\\" id=\\\"search-box\\\" (ngModelChange)=\\\"fetchRestaurants({pageIndex:0})\\\" [(ngModel)]=\\\"searchText\\\" aria-label=\\\"Search\\\">\\n\\n<div class=\\\"loading-spinner\\\" *ngIf=\\\"!restaurants\\\">\\n  <div>\\n    <mat-progress-spinner\\n      class=\\\"example-margin\\\"\\n      [color]=\\\"color\\\"\\n      [mode]=\\\"mode\\\"\\n      [value]=\\\"value\\\">\\n    </mat-progress-spinner>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"restaurants\\\">\\n  <mat-card class=\\\"example-card\\\" *ngFor=\\\"let restaurant of restaurants\\\" id=\\\"restaurant-cards\\\">\\n    <button class=\\\"right\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <button mat-menu-item (click)=\\\"goToProducts(restaurant.id)\\\">\\n        <mat-icon>create</mat-icon>\\n        <span>\\n        Редактирай\\n      </span>\\n      </button>\\n      <button *ngIf=\\\"isAdmin()\\\" mat-menu-item (click)=\\\"deleteRestaurant(restaurant)\\\">\\n        <mat-icon>delete_forever</mat-icon>\\n        <span>Изтрий</span>\\n      </button>\\n    </mat-menu>\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n      <mat-card-title>\\n        <a routerLink=\\\"/restaurants/{{restaurant.id}}/products\\\">{{restaurant.name}}</a>\\n      </mat-card-title>\\n      <mat-card-subtitle>{{restaurant.location}}</mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content class=\\\"text-center\\\">\\n      <img mat-card-xl-image src=\\\"{{restaurant.coverImageUrl}}\\\" alt=\\\"Restaurant photo\\\">\\n    </mat-card-content>\\n  </mat-card>\\n\\n    <mat-paginator [length]=\\\"totalElements\\\"\\n                   [pageSize]=\\\"size\\\"\\n                   [pageIndex]=\\\"page\\\"\\n                   [pageSizeOptions]=\\\"[6]\\\"\\n                   (page)=\\\"fetchRestaurants($event)\\\">\\n    </mat-paginator>\\n</div>\\n\\n\\n\";","export default \"<mat-card>\\n  <mat-card-content>\\n    <form [formGroup]=\\\"form\\\">\\n      <h2>Добави потребител</h2>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Имейл на потребителя\\\" formControlName=\\\"username\\\" required>\\n        <mat-error>\\n          Моля въведете имейл на потребителя\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width-input\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Парола на потребителя\\\" formControlName=\\\"password\\\" required>\\n        <mat-error>\\n          Моля въведете парола на потребителя\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Изберете ресторант</mat-label>\\n        <mat-select formControlName=\\\"restaurantId\\\">\\n          <mat-option *ngFor=\\\"let restaurant of restaurants\\\" [value]=\\\"restaurant.id\\\">\\n            {{restaurant.name}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Изберете роля на потребителя</mat-label>\\n        <mat-select formControlName=\\\"roles\\\" multiple>\\n          <mat-option value=\\\"WAITER\\\">Сервитьор</mat-option>\\n          <mat-option value=\\\"OWNER\\\">Собственик</mat-option>\\n          <mat-option *ngIf=\\\"isAdmin()\\\" value=\\\"ADMIN\\\">Админ</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"add-restaurant-button text-white\\\" (click)=\\\"addUser()\\\"> <mat-icon>add</mat-icon> Добави</button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\";","export default \"<div class=\\\"text-center\\\">\\n  <h2>Всички Потребители</h2>\\n</div>\\n<mat-divider></mat-divider>\\n<input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Търси сервитьор\\\" id=\\\"search-box\\\" [(ngModel)]=\\\"text\\\" aria-label=\\\"Search\\\">\\n<br>\\n<mat-divider></mat-divider>\\n<a mat-button color=\\\"primary\\\" routerLink=\\\"/users/create\\\"><mat-icon>add</mat-icon>Добави нов потребител</a>\\n<mat-divider></mat-divider>\\n<mat-tab-group>\\n  <mat-tab label=\\\"{{restaurant.name}}\\\" *ngFor=\\\"let restaurant of restaurants\\\">\\n\\n    <mat-card class=\\\"example-card\\\" *ngIf=\\\"restaurant.owner\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>{{restaurant.owner.username}}</mat-card-title>\\n        <mat-card-subtitle *ngIf=\\\"restaurant.owner && restaurant.owner.username\\\"></mat-card-subtitle>\\n        <mat-card-subtitle>Роли: {{getRepresentationTextForRoles(['OWNER']).join(',')}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content class=\\\"text-center\\\">\\n        <img mat-card-sm-image src=\\\"https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png\\\" alt=\\\"user photo\\\">\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"text-center\\\">\\n        <a mat-button color=\\\"primary\\\" routerLink=\\\"/users/{{restaurant.owner.username}}/edit\\\"><mat-icon>create</mat-icon>Редактирай</a>\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"deleteUser(restaurant.owner)\\\"><mat-icon>delete_forever</mat-icon>Изтрий</button>\\n      </mat-card-actions>\\n    </mat-card>\\n\\n    <mat-card class=\\\"example-card\\\" *ngFor=\\\"let user of restaurant.waiters | filterUsers: text\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>{{user.username}}</mat-card-title>\\n        <mat-card-subtitle *ngIf=\\\"user.restaurant && user.restaurant.name\\\">Ресторант: {{user?.restaurant?.name}}</mat-card-subtitle>\\n        <mat-card-subtitle>Роли: {{getRepresentationTextForRoles(user.roles).join(',')}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content class=\\\"text-center\\\">\\n        <img mat-card-sm-image src=\\\"https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png\\\" alt=\\\"user photo\\\">\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"text-center\\\">\\n        <a mat-button color=\\\"primary\\\" routerLink=\\\"/users/{{user.id}}/edit\\\"><mat-icon>create</mat-icon>Редактирай</a>\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"deleteUser(user)\\\"><mat-icon>delete_forever</mat-icon>Изтрий</button>\\n      </mat-card-actions>\\n    </mat-card>\\n    <div *ngIf=\\\"restaurant.waiters.length === 0 && !restaurant.owner\\\">\\n      <br>\\n      <span class=\\\"text-danger\\\">Няма потребители за този ресторант</span>\\n    </div>\\n  </mat-tab>\\n</mat-tab-group>\\n\";","export default \"#search-box {\\n  margin-bottom: 30px;\\n  margin-top: 30px;\\n}\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\nmat-drawer {\\n  width: 300px;\\n}\\nmat-drawer-container {\\n  height: 100%;\\n}\\nmat-drawer-content {\\n  padding: 20px;\\n}\\nul li {\\n  list-style: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBRUE7RUFDRSxZQUFZO0FBQ2Q7QUFFQTtFQUNFLGFBQWE7QUFDZjtBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjc2VhcmNoLWJveCB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG59XG46aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwJTtcbn1cbm1hdC1kcmF3ZXIge1xuICB3aWR0aDogMzAwcHg7XG59XG5cbm1hdC1kcmF3ZXItY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5tYXQtZHJhd2VyLWNvbnRlbnQge1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4iXX0= */\";","import {Component} from '@angular/core';\nimport {SecurityObjectModel} from './models/security-object.model';\nimport {AuthenticationService} from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'RMS-admin';\n  sideBarOpened = false;\n\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  toggle() {\n    this.sideBarOpened = !this.sideBarOpened;\n  }\n\n  getSecurityObject(): SecurityObjectModel {\n    return JSON.parse(window.localStorage.getItem('user'));\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {RoutingModule} from './routing.module';\nimport {AppComponent} from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NavigationComponent} from './components/common/navigation/navigation.component';\nimport {ListRestaurantsComponent} from './components/restaurant/list-restaurants/list-restaurants.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CreateRestaurantComponent} from './components/restaurant/create-restaurant/create-restaurant.component';\nimport {ProductListComponent} from './components/product/product-list/product-list.component';\nimport {CreateProductComponent} from './components/product/create-product/create-product.component';\nimport {EditRestaurantComponent} from './components/restaurant/edit-restaurant/edit-restaurant.component';\nimport {HomeComponent} from './components/common/home/home.component';\nimport {LoginComponent} from './components/common/login/login.component';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TokenInterceptor} from './security/token.interceptor';\nimport {ProductListFilterPipe} from './pipes/product-list-filter.pipe';\nimport {ListUsersComponent} from './components/user/list-users/list-users.component';\nimport {MaterialModule} from './modules/material/material-module';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ConfirmationDialogComponent} from './components/restaurant/list-restaurants/confirmation-dialog.component';\nimport {UserListFilterPipe} from './pipes/user-list-filter.pipe';\nimport { ImportProductsComponent } from './components/product/import-products/import-products.component';\nimport {CreateUserComponent} from './components/user/create-user/create-user.component';\nimport { MyProfileComponent } from './components/account/my-profile/my-profile.component';\nimport {CreateNewCategoryDialogComponent} from './components/product/create-product/create-new-category.dialog';\nimport {EditProductComponent} from \"./components/product/edit-product/edit-product.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    ListRestaurantsComponent,\n    CreateRestaurantComponent,\n    ProductListComponent,\n    CreateProductComponent,\n    EditRestaurantComponent,\n    HomeComponent,\n    EditProductComponent,\n    LoginComponent,\n    ProductListFilterPipe,\n    UserListFilterPipe,\n    ListUsersComponent,\n    ConfirmationDialogComponent,\n    CreateNewCategoryDialogComponent,\n    CreateUserComponent,\n    MyProfileComponent,\n    ImportProductsComponent\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    MaterialModule,\n    FlexLayoutModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  }],\n  entryComponents: [CreateNewCategoryDialogComponent, ConfirmationDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC9teS1wcm9maWxlL215LXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\";","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  restaurantsCount: number;\n  menusCount: number;\n  productsCount: number;\n\n  constructor() { }\n\n  async ngOnInit() {\n  }\n\n}\n","export default \"mat-card {\\n  max-width: 400px;\\n  margin: 2em auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogMmVtIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiJdfQ== */\";","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\nimport {AppComponent} from \"../../../app.component\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  constructor(private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService,\n              private toastrService: ToastrService,\n              private router: Router,\n              private appComponent: AppComponent) {\n    this.form = formBuilder.group({\n      username: [],\n      password: []\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  async login() {\n   this.authenticationService.login(this.form.getRawValue())\n     .then(data => {\n        if ((data.body as SecurityObjectModel).authorities?.includes('USER')) {\n          return Promise.reject(\n            {\n                  error: {\n                    message: 'Клиенти не могат да достъпват администраторската система'\n                  }});\n        }\n        this.appComponent.sideBarOpened = true;\n        this.authenticationService.setSecurityObject(data.body as SecurityObjectModel);\n        this.toastrService.success('Успешен вход!');\n        this.router.navigateByUrl('/restaurants');\n   })\n     .catch(err => {\n       console.log(err);\n       if (err.error?.message) {\n         this.toastrService.error(err.error?.message);\n       } else {\n         this.toastrService.error(err);\n       }\n     });\n  }\n}\n","export default \".profile-card {\\n  text-align: center;\\n  padding: 0 20px 20px 20px;\\n}\\n\\n.profile-card img {\\n  width: 120px;\\n  height: 120px;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  border-radius: 50%;\\n}\\n\\n:host mat-icon {\\n  vertical-align: middle;\\n  margin-right: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixvQkFBaUI7S0FBakIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvbW1vbi9uYXZpZ2F0aW9uL25hdmlnYXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLWNhcmQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMjBweCAyMHB4IDIwcHg7XG59XG5cbi5wcm9maWxlLWNhcmQgaW1nIHtcbiAgd2lkdGg6IDEyMHB4O1xuICBoZWlnaHQ6IDEyMHB4O1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG46aG9zdCBtYXQtaWNvbiB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cbiJdfQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {AppSettings} from '../../../global/app.settings';\nimport {AppComponent} from \"../../../app.component\";\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  constructor(private authenticationService: AuthenticationService, private appComponent: AppComponent) {\n  }\n\n  ngOnInit() {\n  }\n\n  getSecurityObject(): SecurityObjectModel {\n    return JSON.parse(window.localStorage.getItem('user'));\n  }\n\n  isAuthenticatedForRole(role: string) {\n    const user = JSON.parse(window.localStorage.getItem('user'));\n    if (user && user.authorities) {\n      return role.includes(user.authorities);\n    } else {\n      return false;\n    }\n  }\n\n  getRepresentationTextForRoles(roles: string[]): string[] {\n    return AppSettings.getRepresentationTextForRoles(roles);\n  }\n\n  logout() {\n    this.appComponent.sideBarOpened = false;\n    this.authenticationService.logout();\n  }\n}\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {CategoryService} from '../../../services/category.service';\nimport {CategoryModel} from '../../../models/category.model';\n\n@Component({\n  selector: 'app-create-new-category.dialog',\n  templateUrl: 'create-new-category.dialog.html',\n})\nexport class CreateNewCategoryDialogComponent {\n  form: FormGroup;\n  category: CategoryModel = {};\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string, formBuilder: FormBuilder,\n              private categoryService: CategoryService) {\n    this.form = formBuilder.group({\n      title: []\n    });\n  }\n\n  async addCategory(data: any) {\n    this.category = {\n      title: this.title.value\n    };\n    await this.categoryService.addCategory(data.restaurantId, this.category);\n  }\n\n  get title() {\n    return this.form.get('title');\n  }\n}\n","export default \"mat-card {\\n  max-width: 500px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n.add-product-button {\\n  margin-left: 10px;\\n}\\n\\n.mat-dialog-container {\\n  margin: 0 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2NyZWF0ZS1wcm9kdWN0L2NyZWF0ZS1wcm9kdWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2NyZWF0ZS1wcm9kdWN0L2NyZWF0ZS1wcm9kdWN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gIG1heC13aWR0aDogNTAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5hZGQtcHJvZHVjdC1idXR0b24ge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuLm1hdC1kaWFsb2ctY29udGFpbmVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4iXX0= */\";","import { ProductService } from '../../../services/product.service';\nimport { RestaurantService } from '../../../services/restaurant.service';\nimport { ProductModel } from '../../../models/product-list.model';\nimport { RestaurantListModel } from '../../../models/restaurant-list.model';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {AppSettings} from '../../../global/app.settings';\nimport {Router} from '@angular/router';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {CategoryModel} from '../../../models/category.model';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateNewCategoryDialogComponent} from './create-new-category.dialog';\nimport {CategoryService} from '../../../services/category.service';\n\n@Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.css']\n})\nexport class CreateProductComponent implements OnInit {\n\n  selectedMenuId: string;\n  selectedRestaurantId: string;\n  restaurants: RestaurantListModel[];\n  menus: string[];\n  user: SecurityObjectModel;\n  form: FormGroup;\n  product: ProductModel = {};\n  selectedImage: string;\n  categories: CategoryModel[];\n  private selectedRestaurantFullObject: RestaurantListModel;\n  addedCategory: CategoryModel;\n\n  constructor(formBuilder: FormBuilder,\n              private restaurantService: RestaurantService,\n              private productService: ProductService,\n              private toastrService: ToastrService,\n              private router: Router,\n              private authenticationService: AuthenticationService,\n              private dialog: MatDialog,\n              private categoryService: CategoryService) {\n    this.form = formBuilder.group({\n      selectedRestaurant: [],\n      selectedMenu: [],\n      title: [],\n      price: [],\n      description: [],\n      allergens: [],\n      tags: [],\n      category: [],\n      imageUrl: ['']\n  });\n  }\n\n  ngOnInit() {\n    this.fetchRestaurants();\n  }\n\n  addProduct() {\n    this.product = {\n      title: this.title.value,\n      price: this.price.value,\n      quantity: 1,\n      description: this.description.value,\n      allergens: this.allergens.value && this.allergens.value.split(','),\n      tags: this.tags.value && this.tags.value.split(','),\n      category: this.category.value,\n      menus: this.selectedMenu.value,\n      restaurantId: this.selectedRestaurant.value\n    };\n    this.selectedMenuId = this.selectedMenu.value || ['default'];\n    this.selectedRestaurantId = this.selectedRestaurant.value;\n    const formData = new FormData();\n    formData.append('file', this.form.get('imageUrl').value);\n    this.restaurantService.addProduct(this.selectedRestaurant.value, this.product)\n      .then(res => {\n        this.productService.addImageToProduct(res.body.id, formData)\n          .then(() => {\n            this.toastrService.success('Успешно добавихте продукта');\n          })\n          .catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n      }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  private async fetchRestaurants() {\n    this.user = this.authenticationService.getSecurityObject();\n    if (this.user.authorities && this.user.authorities.includes('OWNER')) {\n      this.restaurants = (await this.restaurantService.getAllNames(this.user.username));\n    } else {\n      this.restaurants = (await this.restaurantService.getAllNames(undefined));\n    }\n  }\n\n  async onSelectRestaurant() {\n    const restaurantId = this.selectedRestaurant.value;\n    this.restaurantService.getById(restaurantId).then(selectedRestaurantResponse => {\n      this.menus = (selectedRestaurantResponse).body.menus || ['default'];\n      this.categories = selectedRestaurantResponse.body.categories;\n      this.selectedRestaurantFullObject = selectedRestaurantResponse.body;\n    });\n  }\n\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.selectedImage = event.target.files[0]?.name;\n      this.form.get('imageUrl').setValue(file);\n    }\n  }\n\n  addNewCategory(selectedRestaurantId: string, event: Event) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.dialog.open(CreateNewCategoryDialogComponent, {\n      data: {\n        restaurantId: this.selectedRestaurant.value\n      },\n      height: '240px',\n      width: '450px',\n    });\n\n    this.dialog.afterAllClosed.subscribe(result => {\n      this.categoryService.getAllCategoriesByRestaurantId(this.selectedRestaurant.value).then(categories => {\n        this.categories = categories;\n        if (this.categories.length !== 0) {\n          this.addedCategory = this.categories[this.categories.length - 1];\n          this.category.setValue(this.addedCategory);\n        }\n      });\n    });\n  }\n\n  get selectedRestaurant() {\n    return this.form.get('selectedRestaurant');\n  }\n\n  get selectedMenu() {\n    return this.form.get('selectedMenu');\n  }\n\n  get title() {\n    return this.form.get('title');\n  }\n\n  get price() {\n    return this.form.get('price');\n  }\n\n  get description() {\n    return this.form.get('description');\n  }\n\n  get allergens() {\n    return this.form.get('allergens');\n  }\n\n  get tags() {\n    return this.form.get('tags');\n  }\n\n  get category() {\n    return this.form.get('category');\n  }\n}\n","export default \"mat-card {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n.edit-product-button {\\n  margin-left: 10px;\\n}\\n\\n.loading-spinner {\\n  position: relative;\\n  left: 50%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2VkaXQtcHJvZHVjdC9lZGl0LXByb2R1Y3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0FBQ1giLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Byb2R1Y3QvZWRpdC1wcm9kdWN0L2VkaXQtcHJvZHVjdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xuICBtYXgtd2lkdGg6IDgwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5tYXQtZm9ybS1maWVsZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZWRpdC1wcm9kdWN0LWJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4ubG9hZGluZy1zcGlubmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1MCU7XG59XG4iXX0= */\";","import { ProductService } from '../../../services/product.service';\nimport { ProductModel } from '../../../models/product-list.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {RestaurantService} from '../../../services/restaurant.service';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {AppSettings} from '../../../global/app.settings';\nimport {CategoryModel} from '../../../models/category.model';\nimport {CreateNewCategoryDialogComponent} from '../create-product/create-new-category.dialog';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CategoryService} from '../../../services/category.service';\nimport {ThemePalette} from '@angular/material/core';\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n  isSelectedNewImage: boolean;\n  form: FormGroup;\n  productId: string;\n  product: ProductModel = {title: ''};\n  restaurant: RestaurantListModel;\n  selectedImage: string;\n  categories: CategoryModel[];\n  restaurantId: string;\n  color: ThemePalette = 'accent';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 30;\n  fetchedProduct = false;\n\n  constructor(private formBuilder: FormBuilder,\n              private activeRoute: ActivatedRoute,\n              private restaurantService: RestaurantService,\n              private productService: ProductService,\n              private toastrService: ToastrService,\n              private router: Router,\n              private dialog: MatDialog,\n              private categoryService: CategoryService) {\n    this.form = formBuilder.group({\n      title: [],\n      price: [],\n      quantity: [],\n      description: [],\n      allergens: [],\n      tags: [],\n      category: [],\n      imageUrl: ['']\n    });\n  }\n\n  async ngOnInit() {\n    await this.fetchProduct();\n  }\n\n  setFormData() {\n    this.form = this.formBuilder.group({\n      title: [this.product.title],\n      price: [this.product.price],\n      quantity: [this.product.quantity],\n      description: [this.product.description],\n      allergens: [this.product.allergens],\n      tags: [this.product.tags],\n      category: [this.product.category],\n      imageUrl: ['']\n    });\n  }\n\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      this.isSelectedNewImage = true;\n      const file = event.target.files[0];\n      this.selectedImage = event.target.files[0]?.name;\n      this.form.get('imageUrl').setValue(file);\n    }\n  }\n\n  async editProduct() {\n    this.product.title = this.form.get('title').value;\n    this.product.price = this.form.get('price').value;\n    this.product.quantity = this.form.get('quantity').value;\n    this.product.description = this.form.get('description').value;\n    this.product.allergens = this.form.get('allergens').value;\n    this.product.tags = this.form.get('tags').value;\n    this.product.category = this.form.get('category').value;\n\n    this.productService.editProduct(this.product.id, this.product)\n      .then(response => {\n        if (this.isSelectedNewImage) {\n          const formData = new FormData();\n          formData.append('file', this.form.get('imageUrl').value);\n          this.productService.addImageToProduct(this.product.id, formData)\n            .then(res => {\n              this.toastrService.success('Успешно редактирахте продукта');\n              this.router.navigateByUrl(`/restaurants/${this.restaurant.id}/products`);\n            })\n            .catch(err => {\n              this.toastrService.warning('Проблем при качването на снимката');\n            });\n        } else {\n          this.toastrService.success('Успешно редактирахте продукта');\n          this.router.navigateByUrl(`/restaurants/${this.restaurant.id}/products`);\n        }\n      }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  private async fetchProduct(): Promise<void> {\n    const restaurantId = this.activeRoute.snapshot.paramMap.get('id');\n    this.restaurantId = restaurantId;\n    const productId = this.activeRoute.snapshot.paramMap.get('productId');\n    this.productId = productId;\n    this.product = (await this.productService.getById(productId)).body;\n    this.restaurant = (await this.restaurantService.getById(restaurantId)).body;\n    this.categories = this.restaurant.categories;\n    this.setFormData();\n    this.fetchedProduct = true;\n  }\n\n  addNewCategory(selectedRestaurantId: string, event: Event) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.dialog.open(CreateNewCategoryDialogComponent, {\n      data: {\n        restaurantId: this.restaurant.id\n      },\n      height: '240px',\n      width: '450px',\n    });\n\n    this.dialog.afterAllClosed.subscribe(result => {\n      this.categoryService.getAllCategoriesByRestaurantId(this.restaurant.id).then(categories => {\n        this.categories = categories;\n        if (this.categories.length !== 0) {\n          const addedCategory = this.categories[this.categories.length - 1];\n          this.form.get('category').setValue(addedCategory);\n        }\n      });\n    });\n  }\n}\n","export default \".mat-raised-button {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2ltcG9ydC1wcm9kdWN0cy9pbXBvcnQtcHJvZHVjdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdC9pbXBvcnQtcHJvZHVjdHMvaW1wb3J0LXByb2R1Y3RzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJhaXNlZC1idXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { RestaurantListModel } from '../../../models/restaurant-list.model';\nimport { ProductService } from '../../../services/product.service';\nimport { RestaurantService } from '../../../services/restaurant.service';\n\n@Component({\n  selector: 'app-import-products',\n  templateUrl: './import-products.component.html',\n  styleUrls: ['./import-products.component.css']\n})\nexport class ImportProductsComponent implements OnInit {\n\n  @ViewChild(\"form\")\n  form: NgForm;\n\n  importProductsForm: FormGroup;\n  restaurants: RestaurantListModel[];\n  importFile: File;\n\n  constructor(private formBuilder: FormBuilder,\n              private restaurantService: RestaurantService,\n              private productService: ProductService,\n              private toasterService: ToastrService) {\n    this.buildImportProductsForm();\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.loadRestaurants();\n  }\n\n  onImportFileChosen(event) {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      this.importFile = selectedFile;\n    }\n  }\n\n  async importProducts(): Promise<void> {\n    try {\n      const restaurantId = this.restaurantId.value;\n      const formData = new FormData();\n      formData.append(\"importFile\", this.importFile);\n      const importProductsResponse = await this.productService.importProducts(restaurantId, formData);\n\n      if (importProductsResponse.status === 200) {\n        const importedProductsCount = importProductsResponse.body;\n        this.toasterService.success(`Успешно импортиране на ${importedProductsCount} продукти`);\n        this.clearFormFieldsAndData();\n      } else {\n        this.toasterService.error(\"Неуспешно импортиране на продукти\");\n      }\n    } catch (error) {\n      this.toasterService.error(\"Неуспешно импортиране на продукти\");\n      console.error(error);\n    }\n  }\n\n  private buildImportProductsForm(): void {\n    this.importProductsForm = this.formBuilder.group({\n      restaurantId: [\"\", Validators.required],\n      importFilename: [\"\", Validators.required]\n    });\n  }\n\n  private async loadRestaurants(): Promise<void> {\n    this.restaurants = await this.restaurantService.getAllNames();\n  }\n\n  private clearFormFieldsAndData(): void {\n    this.importProductsForm.reset();\n    this.form.resetForm();\n    this.importFile = null;\n  }\n\n  get restaurantId() { return this.importProductsForm.get(\"restaurantId\"); }\n\n  get importFilename() { return this.importProductsForm.get(\"importFilename\"); }\n}\n","export default \"#search-box {\\n  margin-bottom: 30px;\\n  margin-top: 30px;\\n}\\n\\nmat-form-field {\\n  width: 400px;\\n}\\n\\nmat-card {\\n  width: 30%;\\n  display: inline-block;\\n  margin: 10px;\\n}\\n\\nmat-card-content {\\n  margin-top: 10px;\\n}\\n\\nmat-card-header img {\\n  text-align: center;\\n  margin: 0 auto;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\ntr.example-detail-row {\\n  height: 0;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):hover {\\n  background: whitesmoke;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):active {\\n  background: #efefef;\\n}\\n\\n.example-element-row td {\\n  border-bottom-width: 0;\\n}\\n\\n.example-element-detail {\\n  overflow: hidden;\\n  display: flex;\\n}\\n\\n.example-element-diagram {\\n  min-width: 80px;\\n  padding: 8px;\\n  font-weight: lighter;\\n  margin: 8px 0;\\n  height: 104px;\\n}\\n\\n.example-element-symbol {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal;\\n}\\n\\n.example-element-description {\\n  padding: 16px;\\n}\\n\\n.example-element-description-attribution {\\n  opacity: 0.5;\\n}\\n\\n.image-sm {\\n  width: 20%;\\n  height: 15%;\\n}\\n\\n.actions {\\n  margin-top: -40px;\\n}\\n\\n.loading-spinner {\\n  position: relative;\\n  left: 50%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFHQTtFQUNFLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsU0FBUztBQUNYOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0VBQ1osb0JBQW9CO0VBQ3BCLGFBQWE7RUFDYixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFVBQVU7RUFDVixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsU0FBUztBQUNYIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzZWFyY2gtYm94IHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogNDAwcHg7XG59XG5cbm1hdC1jYXJkIHtcbiAgd2lkdGg6IDMwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDEwcHg7XG59XG5cbm1hdC1jYXJkLWNvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG5cbm1hdC1jYXJkLWhlYWRlciBpbWcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50ci5leGFtcGxlLWRldGFpbC1yb3cge1xuICBoZWlnaHQ6IDA7XG59XG5cbnRyLmV4YW1wbGUtZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZXNtb2tlO1xufVxuXG50ci5leGFtcGxlLWVsZW1lbnQtcm93Om5vdCguZXhhbXBsZS1leHBhbmRlZC1yb3cpOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICNlZmVmZWY7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtcm93IHRkIHtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1kZXRhaWwge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uZXhhbXBsZS1lbGVtZW50LWRpYWdyYW0ge1xuICBtaW4td2lkdGg6IDgwcHg7XG4gIHBhZGRpbmc6IDhweDtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIG1hcmdpbjogOHB4IDA7XG4gIGhlaWdodDogMTA0cHg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtc3ltYm9sIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1kZXNjcmlwdGlvbiB7XG4gIHBhZGRpbmc6IDE2cHg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtZGVzY3JpcHRpb24tYXR0cmlidXRpb24ge1xuICBvcGFjaXR5OiAwLjU7XG59XG5cbi5pbWFnZS1zbSB7XG4gIHdpZHRoOiAyMCU7XG4gIGhlaWdodDogMTUlO1xufVxuXG4uYWN0aW9ucyB7XG4gIG1hcmdpbi10b3A6IC00MHB4O1xufVxuXG4ubG9hZGluZy1zcGlubmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1MCU7XG59XG4iXX0= */\";","import {ProductService} from '../../../services/product.service';\nimport {ProductModel} from '../../../models/product-list.model';\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RestaurantService} from '../../../services/restaurant.service';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {AppSettings} from '../../../global/app.settings';\nimport {ToastrService} from 'ngx-toastr';\nimport {ConfirmationDialogComponent} from '../../restaurant/list-restaurants/confirmation-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ThemePalette} from '@angular/material/core';\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-menu-detail',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ProductListComponent implements OnInit {\n  text = '';\n  restaurant: RestaurantListModel;\n  products: ProductModel[];\n  columnsToDisplay = ['title', 'price', 'allergens', 'tags', 'category', 'menus', 'edit', 'delete'];\n  expandedElement: ProductModel | null;\n  dataSource;\n  color: ThemePalette = 'accent';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 30;\n\n  constructor(private restaurantService: RestaurantService,\n              private productService: ProductService,\n              private activeRoute: ActivatedRoute,\n              private toastrService: ToastrService,\n              private router: Router,\n              private dialog: MatDialog) { }\n\n  async ngOnInit() {\n    await this.fetchProducts();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  async deleteProduct(product: ProductModel) {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: {\n        message: `Сигурен ли си че искаш да изтриеш продукт '${product.title} ?'`,\n        buttonText: {\n          ok: 'Да',\n          cancel: 'Не'\n        }\n      }\n    });\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        const a = document.createElement('a');\n        a.click();\n        a.remove();\n        this.productService.deleteProduct(product.id)\n            .then(response => {\n              if (response.status === 204) {\n                this.toastrService.success('Изтрихте продукта успешно');\n                this.fetchProducts();\n              }\n            }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n      }\n    });\n  }\n\n  private async fetchProducts(): Promise<void> {\n    const restaurantId = this.activeRoute.snapshot.paramMap.get('id');\n    this.restaurant = (await this.restaurantService.getById(restaurantId)).body;\n    this.products = (await this.productService.getAllByRestaurantId(restaurantId)).body.content.filter(p => p !== null);\n    this.dataSource = new MatTableDataSource(this.products);\n  }\n\n  getDisplayTitleCategory(element: any, column: any) {\n    if (column === 'category') {\n      return element.category?.title;\n    }\n\n    return element[column];\n  }\n\n  goToEditProduct(restaurantId: string, productId: string) {\n    this.router.navigateByUrl(`/restaurants/${restaurantId}/products/${productId}/edit`);\n  }\n}\n","export default \"mat-card {\\n  max-width: 500px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n.add-restaurant-button {\\n  margin-left: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXN0YXVyYW50L2NyZWF0ZS1yZXN0YXVyYW50L2NyZWF0ZS1yZXN0YXVyYW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Jlc3RhdXJhbnQvY3JlYXRlLXJlc3RhdXJhbnQvY3JlYXRlLXJlc3RhdXJhbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmFkZC1yZXN0YXVyYW50LWJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuIl19 */\";","import {Component, OnInit} from '@angular/core';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {RestaurantService} from '../../../services/restaurant.service';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\nimport {AppSettings} from '../../../global/app.settings';\n\n@Component({\n  selector: 'app-create-restaurant',\n  templateUrl: './create-restaurant.component.html',\n  styleUrls: ['./create-restaurant.component.css']\n})\nexport class CreateRestaurantComponent implements OnInit {\n  private restaurant: RestaurantListModel = {};\n  form: FormGroup;\n  fileData: File = null;\n  selectedCoverImage: string;\n  selectedLogoImage: string;\n  constructor(private restaurantService: RestaurantService,\n              private formBuilder: FormBuilder,\n              private toastrService: ToastrService,\n              private router: Router) {\n    this.form = formBuilder.group({\n        name: [],\n        location: [],\n        coverImage: [''],\n        logoImage: ['']\n    });\n  }\n\n  ngOnInit() {\n    this.restaurant.name = '';\n    this.restaurant.location = '';\n  }\n\n  onFileSelect(event, imageType) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (imageType === 'coverImage') {\n        this.selectedCoverImage = event.target.files[0]?.name;\n      } else {\n        this.selectedLogoImage = event.target.files[0]?.name;\n      }\n      this.form.get(imageType).setValue(file);\n    }\n  }\n\n  addRestaurant() {\n    this.restaurant = {\n      name: this.name.value,\n      location: this.location.value\n    };\n\n    this.restaurantService.addRestaurant(this.restaurant)\n      .then(res => {\n        const formData = new FormData();\n        const currentRestaurantId = res.body.id;\n        formData.append('file', this.form.get('coverImage').value);\n        this.restaurantService.addImageToRestaurant(formData, currentRestaurantId, 'coverImage')\n          .then(response => {\n            const formData = new FormData();\n            formData.append('file', this.form.get('logoImage').value);\n            return this.restaurantService.addImageToRestaurant(formData, currentRestaurantId, 'logoImage')\n          })\n          .then(response => {\n            if (response.status === 200) {\n              this.toastrService.success('Успешно добавен ресторант');\n              this.setEmptyValuesForFormGroup(this.form);\n            } else {\n              this.toastrService.warning('Възникна проблем при създаването на ресторанта');\n            }\n        });\n    }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  get name() {\n    return this.form.get('name');\n  }\n\n  get location() {\n    return this.form.get('location');\n  }\n\n  private setEmptyValuesForFormGroup(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach(control => {\n      control.setValue('');\n      control.setErrors(undefined);\n\n      if (control.controls) {\n        this.setEmptyValuesForFormGroup(control);\n      }\n    });\n  }\n}\n","export default \"mat-card {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXN0YXVyYW50L2VkaXQtcmVzdGF1cmFudC9lZGl0LXJlc3RhdXJhbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdGF1cmFudC9lZGl0LXJlc3RhdXJhbnQvZWRpdC1yZXN0YXVyYW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */\";","import { RestaurantService } from '../../../services/restaurant.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { RestaurantListModel } from '../../../models/restaurant-list.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {AppSettings} from '../../../global/app.settings';\n\n@Component({\n  selector: 'app-edit-restaurant',\n  templateUrl: './edit-restaurant.component.html',\n  styleUrls: ['./edit-restaurant.component.css']\n})\nexport class EditRestaurantComponent implements OnInit {\n  form: FormGroup;\n  fileData: File = null;\n  restaurant: RestaurantListModel = {name: ''};\n  isSelectedNewImage: boolean;\n  isSelectedNewLogo: boolean;\n  isSelectedNewCover: boolean;\n  selectedCoverImage: string;\n  selectedLogoImage: string;\n  constructor(private formBuilder: FormBuilder,\n              private activeRoute: ActivatedRoute,\n              private restaurantService: RestaurantService,\n              private toastrService: ToastrService,\n              private router: Router) {\n    this.form = this.formBuilder.group({\n      name: [],\n      location: [],\n      image: [],\n      logoImage: [],\n      coverImage: [],\n      active: []\n    });\n  }\n\n  async ngOnInit() {\n    await this.fetchRestaurants();\n    this.form = this.formBuilder.group({\n      name: this.restaurant.name,\n      location: this.restaurant.location,\n      image: this.restaurant.image,\n      logoImage: this.restaurant.logoImageUrl,\n      coverImage: this.restaurant.coverImageUrl,\n      active: this.restaurant.active ? \"active\" : \"inactive\"\n    });\n  }\n\n  async editRestaurant(restaurantId: string) {\n    this.restaurant.name = this.form.get('name').value;\n    this.restaurant.location = this.form.get('location').value;\n    this.restaurant.active = this.form.get(\"active\").value === \"active\";\n    this.restaurantService.patchUpdateRestaurant(restaurantId, this.restaurant)\n      .then(response => {\n        const promises = [];\n        if (this.isSelectedNewCover) {\n          const formData = new FormData();\n          formData.append('file', this.form.get('coverImage').value);\n          promises.push(this.restaurantService.addImageToRestaurant(formData, this.restaurant.id, 'coverImage'));\n        }\n        if (this.isSelectedNewLogo) {\n          const formData = new FormData();\n          formData.append('file', this.form.get('logoImage').value);\n          promises.push(this.restaurantService.addImageToRestaurant(formData, this.restaurant.id, 'logoImage'));\n        }\n\n        Promise.all(promises).then(() => {\n          this.router.navigateByUrl('/restaurants');\n          this.toastrService.success('Успешно редактирахте ресторанта');\n        });\n    }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  onFileSelect(event, imageType) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (imageType === 'coverImage') {\n        this.selectedCoverImage = event.target.files[0]?.name;\n        this.isSelectedNewCover = true;\n      } else {\n        this.selectedLogoImage = event.target.files[0]?.name;\n        this.isSelectedNewLogo = true;\n      }\n      this.form.get(imageType).setValue(file);\n    }\n  }\n\n  private async fetchRestaurants(): Promise<void> {\n    const restaurantId = this.activeRoute.snapshot.paramMap.get('id');\n    this.restaurant = (await this.restaurantService.getById(restaurantId)).body;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: 'confirmation-dialog.html',\n})\nexport class ConfirmationDialogComponent {\n  message = 'Are you sure?';\n  confirmButtonText = 'Yes';\n  cancelButtonText = 'Cancel';\n  constructor(\n    @Inject(MAT_DIALOG_DATA) private data: any,\n    private dialogRef: MatDialogRef<ConfirmationDialogComponent>) {\n    if (data) {\n      this.message = data.message || this.message;\n      if (data.buttonText) {\n        this.confirmButtonText = data.buttonText.ok || this.confirmButtonText;\n        this.cancelButtonText = data.buttonText.cancel || this.cancelButtonText;\n      }\n    }\n  }\n\n  onConfirmClick(): void {\n    this.dialogRef.close(true);\n  }\n\n}\n","export default \"#search-box {\\n  margin-bottom: 30px;\\n  margin-top: 30px;\\n}\\n\\n#restaurant-cards {\\n  margin: 10px;\\n}\\n\\nmat-card {\\n  width: 28%;\\n  display: inline-block;\\n}\\n\\nmat-card-content {\\n  margin-top: 10px;\\n}\\n\\nmat-card-header img {\\n  text-align: center;\\n  margin: 0 auto;\\n}\\n\\n.right {\\n  position: absolute;\\n  right: 5px;\\n  top: 2px;\\n}\\n\\n.no-border {\\n  padding: 0;\\n  border: none;\\n  background: none;\\n}\\n\\n.loading-spinner {\\n  position: relative;\\n  left: 50%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXN0YXVyYW50L2xpc3QtcmVzdGF1cmFudHMvbGlzdC1yZXN0YXVyYW50cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0VBQ25CLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFVBQVU7RUFDVixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBR0E7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsUUFBUTtBQUNWOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsU0FBUztBQUNYIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZXN0YXVyYW50L2xpc3QtcmVzdGF1cmFudHMvbGlzdC1yZXN0YXVyYW50cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3NlYXJjaC1ib3gge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuXG4jcmVzdGF1cmFudC1jYXJkcyB7XG4gIG1hcmdpbjogMTBweDtcbn1cblxubWF0LWNhcmQge1xuICB3aWR0aDogMjglO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbm1hdC1jYXJkLWNvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG5cbm1hdC1jYXJkLWhlYWRlciBpbWcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ucmlnaHQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiA1cHg7XG4gIHRvcDogMnB4O1xufVxuXG4ubm8tYm9yZGVyIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuXG4ubG9hZGluZy1zcGlubmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1MCU7XG59XG4iXX0= */\";","import {RestaurantService} from '../../../services/restaurant.service';\nimport {Component, OnInit} from '@angular/core';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmationDialogComponent} from './confirmation-dialog.component';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {Router} from '@angular/router';\nimport {ThemePalette} from '@angular/material/core';\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-list-restaurants',\n  templateUrl: './list-restaurants.component.html',\n  styleUrls: ['./list-restaurants.component.css']\n})\nexport class ListRestaurantsComponent implements OnInit {\n  restaurants: RestaurantListModel[];\n  searchText = '';\n  user: SecurityObjectModel;\n  page = 0;\n  size = 6;\n  private totalElements: number;\n  color: ThemePalette = 'accent';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 30;\n\n  constructor(private restaurantService: RestaurantService,\n              private toastrService: ToastrService,\n              private dialog: MatDialog,\n              private authenticationService: AuthenticationService,\n              private router: Router) { }\n\n  async ngOnInit() {\n    await this.fetchRestaurants({pageIndex: this.page, pageSize: this.size});\n  }\n\n  // fetch all restaurants for ADMIN role and only owner's restaurant if the user is owner\n  private async fetchRestaurants(paginationObject): Promise<void> {\n    this.user = this.authenticationService.getSecurityObject();\n\n    if (this.user.authorities && this.user.authorities.includes('OWNER')) {\n      await this.requestRestaurants(paginationObject, this.user.username);\n    } else {\n      await this.requestRestaurants(paginationObject);\n    }\n\n    this.page = paginationObject.pageIndex;\n  }\n\n  private async requestRestaurants(obj, user?: string) {\n    const allRestaurantResponse = await this.restaurantService.getAll(user, this.searchText, obj.pageIndex, this.size);\n    this.totalElements = allRestaurantResponse.body.totalElements;\n    this.restaurants = allRestaurantResponse.body.content;\n  }\n\n  async deleteRestaurant(restaurant: RestaurantListModel) {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: {\n        message: `Сигурен ли си че искаш да изтриеш ресторант '${restaurant.name} ?'`,\n        buttonText: {\n          ok: 'Да',\n          cancel: 'Не'\n        }\n      }\n    });\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        const a = document.createElement('a');\n        a.click();\n        a.remove();\n        this.restaurantService.deleteRestaurant(restaurant.id).then(response => {\n          if (response.status === 200) {\n            this.toastrService.success('Успешно изтрихте ресторанта!');\n            this.fetchRestaurants({pageIndex: this.page, pageSize: this.size});\n          }\n        });\n      }\n    });\n  }\n\n  goToProducts(restaurantId: string) {\n    this.router.navigateByUrl(`/restaurants/${restaurantId}/edit`);\n  }\n\n  isAdmin(): boolean {\n    return this.user.authorities.includes('ADMIN');\n  }\n}\n\n","export default \"mat-card {\\n  max-width: 500px;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyL2NyZWF0ZS11c2VyL2NyZWF0ZS11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3VzZXIvY3JlYXRlLXVzZXIvY3JlYXRlLXVzZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiJdfQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {UserCreateModel} from '../../../models/user-create.model';\nimport {UserService} from '../../../services/user.service';\nimport {RestaurantService} from '../../../services/restaurant.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\nimport {AppSettings} from '../../../global/app.settings';\nimport {AuthenticationService} from '../../../services/authentication.service';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n  restaurants: RestaurantListModel[];\n  form: FormGroup;\n  user: UserCreateModel = {};\n  selectedRestaurantId: string;\n  constructor(private formBuilder: FormBuilder,\n              private userService: UserService,\n              private restaurantService: RestaurantService,\n              private toastrService: ToastrService,\n              private router: Router,\n              private authenticationService: AuthenticationService) {\n    this.form = formBuilder.group({\n      username: [],\n      password: [],\n      restaurantId: [],\n      selectedRestaurantId: [],\n      roles: []\n    });\n  }\n\n  async ngOnInit() {\n    const user = this.authenticationService.getSecurityObject();\n    if (user.authorities.includes('OWNER')) {\n      this.restaurants = (await this.restaurantService.getAllNames(user.username));\n    } else {\n      this.restaurants = (await this.restaurantService.getAllNames());\n    }\n\n    this.user.password = '';\n    this.user.restaurantId = '';\n    this.user.username = '';\n    this.selectedRestaurantId = '';\n  }\n\n  addUser() {\n    const user: UserCreateModel = {\n      username: this.form.get('username').value,\n      password: this.form.get('password').value,\n      restaurantId: this.form.get('restaurantId').value\n    };\n    this.userService.addUser(user, this.form.get('roles').value)\n      .then(res => {\n        if (res.status === 200) {\n          this.toastrService.success('Успешно създадохте потребителя');\n          this.setEmptyValuesForFormGroup(this.form);\n        }\n      }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n  }\n\n  isAdmin(): boolean {\n    return this.authenticationService.getSecurityObject().authorities.includes('ADMIN');\n  }\n\n  private setEmptyValuesForFormGroup(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach(control => {\n      control.setValue('');\n      control.setErrors(undefined);\n\n      if (control.controls) {\n        this.setEmptyValuesForFormGroup(control);\n      }\n    });\n  }\n}\n","export default \"mat-card {\\n  padding: 10px;\\n  margin: 10px;\\n  width: 25%;\\n  display: inline-block;\\n}\\n\\nmat-card-content {\\n  margin-top: 10px;\\n}\\n\\n.mat-card-header .mat-card-title {\\n  font-size: 13px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyL2xpc3QtdXNlcnMvbGlzdC11c2Vycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWixVQUFVO0VBQ1YscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9saXN0LXVzZXJzL2xpc3QtdXNlcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcbiAgcGFkZGluZzogMTBweDtcbiAgbWFyZ2luOiAxMHB4O1xuICB3aWR0aDogMjUlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbm1hdC1jYXJkLWNvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ubWF0LWNhcmQtaGVhZGVyIC5tYXQtY2FyZC10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cbiJdfQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../../services/user.service';\nimport {AppSettings} from '../../../global/app.settings';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmationDialogComponent} from '../../restaurant/list-restaurants/confirmation-dialog.component';\nimport {UserListWithRestaurantDetailsModel} from '../../../models/user-list-with-restaurant-details.model';\nimport {RestaurantListModel} from '../../../models/restaurant-list.model';\nimport {AuthenticationService} from '../../../services/authentication.service';\nimport {SecurityObjectModel} from '../../../models/security-object.model';\nimport {RestaurantService} from '../../../services/restaurant.service';\n\n@Component({\n  selector: 'app-list-users',\n  templateUrl: './list-users.component.html',\n  styleUrls: ['./list-users.component.css']\n})\nexport class ListUsersComponent implements OnInit {\n  users: UserListWithRestaurantDetailsModel[];\n  restaurants: RestaurantListModel[];\n  user: SecurityObjectModel;\n  text = '';\n  constructor(private userService: UserService,\n              private toastrService: ToastrService,\n              private router: Router,\n              private dialog: MatDialog,\n              private authenticationService: AuthenticationService,\n              private restaurantService: RestaurantService) { }\n\n  async ngOnInit() {\n    this.fetchAllUsers();\n  }\n\n  private async fetchAllUsers() {\n    this.users = await this.userService.getAllUsers();\n    this.user = this.authenticationService.getSecurityObject();\n    if (this.user.authorities && this.user.authorities.includes('OWNER')) {\n      this.restaurants = (await this.restaurantService.getAll(this.user.username, '', 0, 100000)).body.content;\n    } else {\n      this.restaurants = (await this.restaurantService.getAll(undefined, '', 0, 100000)).body.content;\n    }\n  }\n\n  deleteUser(user: UserListWithRestaurantDetailsModel) {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: {\n        message: `Сигурен ли си че искаш да изтриеш потребител '${user.username} ?'`,\n        buttonText: {\n          ok: 'Да',\n          cancel: 'Не'\n        }\n      }\n    });\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        const a = document.createElement('a');\n        a.click();\n        a.remove();\n        this.userService.deleteUser(user.id)\n          .then(res => {\n            if (res.status === 200) {\n              this.fetchAllUsers();\n              this.toastrService.success('Успешно изтрихте потребителя');\n            }\n          }).catch(err => {AppSettings.redirectAndRequireToLogin(err.status, this.toastrService, this.router); });\n      }\n    });\n  }\n\n  getRepresentationTextForRoles(roles: string[]): string[] {\n    return AppSettings.getRepresentationTextForRoles(roles);\n  }\n}\n","import {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\n\nexport class AppSettings {\n  public static API_ENDPOINT = 'https://meniuto-portal.azurewebsites.net'; // 'https://tequila-s-laimche-brat.herokuapp.com  / 8080\n  static redirectAndRequireToLogin(errStatus, toastrService: ToastrService, router: Router) {\n    if (errStatus === 403) {\n      toastrService.warning('Please login..', 'Expired token');\n      router.navigateByUrl('/login');\n    }\n  }\n\n  static getRepresentationTextForRoles(roles: string[]): string[] {\n    const representationRoles = [];\n\n    roles.forEach(role => {\n      if (role.includes('ADMIN')) {\n        representationRoles.push('Администратор');\n      }\n\n      if (role.includes('OWNER')) {\n        representationRoles.push('Собственик');\n      }\n\n      if (role.includes('WAITER')) {\n        representationRoles.push('Сервитьор');\n      }\n    });\n\n    return representationRoles;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {ProductModel} from '../models/product-list.model';\n\n@Pipe({\n  name: 'filterProducts'\n})\nexport class ProductListFilterPipe implements PipeTransform {\n  transform(items: ProductModel[], searchText: string): ProductModel[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLocaleLowerCase();\n\n    return items.filter(it => {\n      return it.title.toLocaleLowerCase().includes(searchText) || it.category.title.toLocaleLowerCase().includes(searchText);\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {RestaurantListModel} from '../models/restaurant-list.model';\nimport {UserListModel} from '../models/user-list.model';\nimport {UserListWithRestaurantDetailsModel} from '../models/user-list-with-restaurant-details.model';\n\n@Pipe({\n  name: 'filterUsers'\n})\nexport class UserListFilterPipe implements PipeTransform {\n  transform(items: UserListWithRestaurantDetailsModel[], searchText: string): UserListWithRestaurantDetailsModel[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLocaleLowerCase();\n\n    return items.filter(it => {\n      return it.username.toLocaleLowerCase().includes(searchText);\n    });\n  }\n}\n","import {EditProductComponent} from './components/product/edit-product/edit-product.component';\nimport {EditRestaurantComponent} from './components/restaurant/edit-restaurant/edit-restaurant.component';\nimport {CreateProductComponent} from './components/product/create-product/create-product.component';\nimport {ProductListComponent} from './components/product/product-list/product-list.component';\nimport {CreateRestaurantComponent} from './components/restaurant/create-restaurant/create-restaurant.component';\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ListRestaurantsComponent} from './components/restaurant/list-restaurants/list-restaurants.component';\nimport {LoginComponent} from './components/common/login/login.component';\nimport {AuthGuard} from './security/auth.guard';\nimport { ImportProductsComponent } from './components/product/import-products/import-products.component';\nimport {ListUsersComponent} from './components/user/list-users/list-users.component';\nimport {CreateUserComponent} from './components/user/create-user/create-user.component';\nimport {MyProfileComponent} from './components/account/my-profile/my-profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'restaurants/create',\n    component: CreateRestaurantComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN'}\n  },\n  {\n    path: 'restaurants',\n    component: ListRestaurantsComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'restaurants/:id/edit',\n    component: EditRestaurantComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'restaurants/:id/products',\n    component: ProductListComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'restaurants/:id/products/:productId/edit',\n    component: EditProductComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'product',\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN,OWNER'},\n    children: [\n      { path: ':id/edit', component: EditProductComponent},\n    ]\n  },\n  {\n    path: 'products/create',\n    canActivate: [AuthGuard],\n    component: CreateProductComponent,\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'users/all',\n    canActivate: [AuthGuard],\n    component: ListUsersComponent,\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'users/create',\n    canActivate: [AuthGuard],\n    component: CreateUserComponent,\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'my-profile',\n    canActivate: [AuthGuard],\n    component: MyProfileComponent,\n    data: {authorities: 'ADMIN,OWNER'}\n  },\n  {\n    path: 'import',\n    component: ImportProductsComponent,\n    canActivate: [AuthGuard],\n    data: {authorities: 'ADMIN'}\n  },\n  { path: '**', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class RoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {ToastrService} from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authenticationService: AuthenticationService,\n              private router: Router,\n              private toastrService: ToastrService) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const role = next.data.authorities;\n    const user = this.authenticationService.getSecurityObject();\n    if (user && user.authenticated && role.includes(user.authorities)) {\n      return true;\n    } else {\n      this.toastrService.warning('You are not authorized to access that resource!');\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor() {\n  }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const user = JSON.parse(window.localStorage.getItem('user'));\n    if (user && user.jwt) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${user.jwt}`\n        }\n      });\n    }\n    return next.handle(req);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {UserAuthenticationModel} from '../models/user-authentication.model';\nimport {AppSettings} from '../global/app.settings';\nimport {SecurityObjectModel} from '../models/security-object.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  constructor(private httpClient: HttpClient,\n              private toastrService: ToastrService,\n              private router: Router) {\n  }\n\n  login(user: UserAuthenticationModel): Promise<HttpResponse<object>> {\n    return this.httpClient.post(`${AppSettings.API_ENDPOINT}/authenticate`, user, {observe: 'response'}).toPromise();\n  }\n\n  getSecurityObject(): SecurityObjectModel {\n    return JSON.parse(window.localStorage.getItem('user'));\n  }\n\n  setSecurityObject(obj: SecurityObjectModel) {\n    window.localStorage.setItem('user', JSON.stringify(obj as SecurityObjectModel));\n  }\n\n  logout() {\n    window.localStorage.removeItem('user');\n    this.toastrService.success('Success logout!');\n    this.router.navigateByUrl('/login');\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {AppSettings} from '../global/app.settings';\nimport {CategoryModel} from '../models/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getAllCategoriesByRestaurantId(restaurantId: string): Promise<CategoryModel[]> {\n    // tslint:disable-next-line:max-line-length\n    return this.httpClient.get<CategoryModel[]>(`${AppSettings.API_ENDPOINT}/api/category?restaurantId=${restaurantId}`).toPromise();\n  }\n\n  addCategory(restaurantId: string, category: CategoryModel): Promise<CategoryModel> {\n    // tslint:disable-next-line:max-line-length\n    return this.httpClient.post<CategoryModel>(`${AppSettings.API_ENDPOINT}/api/category/create?restaurantId=${restaurantId}`, category).toPromise();\n  }\n}\n","import {ProductModel} from '../models/product-list.model';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {AppSettings} from '../global/app.settings';\nimport {ListResponse} from './restaurant.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  constructor(private httpClient: HttpClient) { }\n\n  addImageToProduct(productId: string, formData: FormData) {\n    return this.httpClient.post(`${AppSettings.API_ENDPOINT}/api/product/${productId}/upload-image`,\n      formData,\n      {observe: 'response'})\n      .toPromise();\n  }\n\n  editProduct(productId: string, product: ProductModel): Promise<HttpResponse<object>> {\n    return this.httpClient.put(`${AppSettings.API_ENDPOINT}/api/product/${productId}`, product, {observe: 'response'}).toPromise();\n  }\n\n  getById(productId: string): Promise<HttpResponse<ProductModel>> {\n    return this.httpClient.get<ProductModel>(`${AppSettings.API_ENDPOINT}/api/product/${productId}`, {observe: 'response'}).toPromise();\n  }\n\n  deleteProduct(productId: string): Promise<HttpResponse<object>> {\n    return this.httpClient.delete(`${AppSettings.API_ENDPOINT}/api/product/${productId}`, {observe: 'response'}).toPromise();\n  }\n\n  getAllByRestaurantId(id: string): Promise<HttpResponse<ListResponse<ProductModel>>> {\n    // tslint:disable-next-line:max-line-length\n    return this.httpClient.get<ListResponse<ProductModel>>(`${AppSettings.API_ENDPOINT}/api/product/all?page=0&size=100000&restaurantId=${id}`, {observe: 'response'}).toPromise();\n  }\n\n  importProducts(restaurantId: string, formData: FormData): Promise<HttpResponse<number>> {\n    return this.httpClient.post<number>(\n      `${AppSettings.API_ENDPOINT}/api/product/${restaurantId}/import-products`,\n      formData,\n      {observe: \"response\"}).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { RestaurantListModel } from '../models/restaurant-list.model';\nimport {AppSettings} from '../global/app.settings';\nimport {ProductModel} from '../models/product-list.model';\nimport {RestaurantUpdateModel} from '../models/restaurant-update.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAll(ownerUsername?: string, search?: string, page?: number, size?: number): Promise<HttpResponse<ListResponse<RestaurantListModel>>> {\n    return this.httpClient\n      // tslint:disable-next-line:max-line-length\n      .get<ListResponse<RestaurantListModel>>(`${AppSettings.API_ENDPOINT}/api/restaurant/all?page=${page}&size=${size}&searchTerm=${search}${ownerUsername ? '&ownerUsername=' + ownerUsername : ''}`,\n      {observe: 'response'})\n      .toPromise();\n  }\n\n  getAllNames(ownerUsername?: string): Promise<RestaurantListModel[]> {\n    return this.httpClient\n      // tslint:disable-next-line:max-line-length\n      .get<RestaurantListModel[]>(`${AppSettings.API_ENDPOINT}/api/restaurant/names${ownerUsername ? '?ownerUsername=' + ownerUsername : ''}`)\n      .toPromise();\n  }\n\n  getById(id: string): Promise<HttpResponse<RestaurantListModel>> {\n    return this.httpClient.get<RestaurantListModel>(`${AppSettings.API_ENDPOINT}/api/restaurant/${id}`, {observe: 'response'}).toPromise();\n  }\n\n  addProduct(id: string, product: ProductModel): Promise<HttpResponse<ProductModel>> {\n    return this.httpClient.post<ProductModel>(`${AppSettings.API_ENDPOINT}/api/restaurant/${id}/add-product`,\n      product,\n      {observe: 'response'}).toPromise();\n  }\n\n  patchUpdateRestaurant(restaurantId: string, restaurant: RestaurantUpdateModel) {\n    return this.httpClient.patch<RestaurantUpdateModel>(`${AppSettings.API_ENDPOINT}/api/restaurant/${restaurantId}`,\n      restaurant,\n      {observe: 'response'})\n      .toPromise();\n  }\n\n   addRestaurant(restaurant: RestaurantListModel): Promise<HttpResponse<RestaurantListModel>> {\n     return this.httpClient.post<RestaurantListModel>(`${AppSettings.API_ENDPOINT}/api/restaurant/create`,\n       restaurant,\n       {observe: 'response'})\n       .toPromise();\n   }\n\n   addImageToRestaurant(formData, restaurantId, imageType) {\n     return this.httpClient.post(`${AppSettings.API_ENDPOINT}/api/restaurant/${restaurantId}/upload-image?imageType=${imageType}`,\n       formData,\n       {observe: 'response'})\n       .toPromise();\n   }\n\n   deleteRestaurant(id: string): Promise<HttpResponse<object>> {\n    return this.httpClient.delete(`${AppSettings.API_ENDPOINT}/api/restaurant/${id}`, {observe: 'response'}).toPromise();\n   }\n}\n\nexport class ListResponse<T> {\n  content: T[];\n  totalElements: number;\n}\n","import {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {AppSettings} from '../global/app.settings';\nimport {UserCreateModel} from '../models/user-create.model';\nimport {SecurityObjectModel} from '../models/security-object.model';\nimport {UserListWithRestaurantDetailsModel} from '../models/user-list-with-restaurant-details.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private httpClient: HttpClient) { }\n\n  getAllUsers(): Promise<UserListWithRestaurantDetailsModel[]> {\n    return this.httpClient.get<UserListWithRestaurantDetailsModel[]>(`${AppSettings.API_ENDPOINT}/api/all-users`).toPromise();\n  }\n\n  deleteUser(userId: string): Promise<HttpResponse<object>> {\n    return this.httpClient.delete(`${AppSettings.API_ENDPOINT}/api/delete-user/${userId}`, {observe: 'response'}).toPromise();\n  }\n\n  addUser(user: UserCreateModel, roles: []): Promise<HttpResponse<SecurityObjectModel>> {\n    return this.httpClient.post<SecurityObjectModel>(`${AppSettings.API_ENDPOINT}/api/add-user${roles && '?roles=' + roles.join()}`,\n      user,\n      {observe: 'response'})\n      .toPromise();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}